{
    "openapi": "3.0.0",
    "info": {
        "title": "Api de location des meubles",
        "description": "il s'agit de la documentation complète de chaque methode,route,etc",
        "contact": {
            "email": "zakiyoubababodi@gmail.com "
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/logement/withoutvalidate": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des logements en attente d'être verifiés par l'administrateur",
                "operationId": "f9f7c90a6a44f31895446ed5cedce921",
                "responses": {
                    "200": {
                        "description": "Succès de la requête",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/withoutupdate": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des logements en attente de mise à jour par l'administrateur",
                "operationId": "fd8081d7336d6a8fb923350744ca5dd1",
                "responses": {
                    "200": {
                        "description": "Succès de la requête",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/withoutvalidation/show/{housing_id}": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des détails possibles d'un logement donné côté Admin",
                "description": "Récupère les détails d'un logement spécifié par son ID, y compris les informations sur le propriétaire, les photos, les équipements, les préférences, les réductions, les promotions, les catégories et les prix.",
                "operationId": "11d80eafb690f3ae0780ff2364b46162",
                "parameters": [
                    {
                        "name": "housing_id",
                        "in": "path",
                        "description": "ID du logement à afficher",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Détails du logement récupérés avec succès",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Le logement spécifié n'existe pas",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Le logement spécifié n'existe pas"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/validate/one/{id}": {
            "put": {
                "tags": [
                    "Housing"
                ],
                "summary": "Valider un logement spécifique en attente de verification",
                "description": "Valide un logement spécifié par son ID et met à jour son statut en 'verified'. Envoie également une notification à l'utilisateur propriétaire du logement.",
                "operationId": "5cc6d6096d40d99a820de210307eca67",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID du logement à valider",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succès - Statut du logement mis à jour avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Statut du logement mis à jour avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Non trouvé - L'ID du logement spécifié n'existe pas",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "L'ID du logement spécifié n'existe pas"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Erreur lors de la mise à jour du statut de l'annonce"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/validate/many/": {
            "put": {
                "tags": [
                    "Housing"
                ],
                "summary": "Valider plusieurs logements",
                "description": "Valide plusieurs logements spécifiés par leurs IDs et met à jour leur statut en 'verified'. Envoie également une notification à chaque utilisateur propriétaire des logements validés.",
                "operationId": "2091c2d8a011aa026a3a22305395050d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "housing_ids"
                                ],
                                "properties": {
                                    "housing_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Succès - Statut des logements mis à jour avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Statut des logements mis à jour avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Non trouvé - Certains IDs de logements n'existent pas dans la base de données",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Certains IDs de logements n'existent pas dans la base de données"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Erreur lors de la mise à jour du statut des logements"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logements/index/ListeDesLogementsValideBloque": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des logements déjà verifiés mais bloqués par l'administrateur",
                "description": "Récupère la liste des logements qui sont déjà verifiés mais bloqués  par l'administrateur.",
                "operationId": "b0d6f0e23d6a83e9a91b749f2695fdb6",
                "responses": {
                    "200": {
                        "description": "Succès - Liste des logements déjà verifiés mais bloqués  par l'administrateur",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/index/ListeDesLogementsValideDelete": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des logements déjà verifiés mais suprimés par l'administrateur",
                "description": "Récupère la liste des logements qui sont déjà verifiés mais supprimés par l'administrateur.",
                "operationId": "bcb318994546ff214f133fc20c50d5ee",
                "responses": {
                    "200": {
                        "description": "Succès - Liste des logements déjà verifiés mais supprimés  par l'administrateur",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/admin/statistique": {
            "get": {
                "tags": [
                    "Administration"
                ],
                "summary": "Statistiques en matière de nombre ",
                "description": "Récupère les statistiques importantes en matière de nombre pour l'administrateur.",
                "operationId": "aacb8e9f9455449848207a49a759bec5",
                "responses": {
                    "200": {
                        "description": "Succès - Statistiques de l'administrateur",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Erreur lors de la récupération des statistiques de l'administrateur"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/update/one/{id}": {
            "post": {
                "tags": [
                    "Housing"
                ],
                "summary": "Valider un logement spécifique en attente de mise à jour",
                "description": "Valide un logement spécifique par son ID et met à jour son is_updated en 0. Envoie également une notification à l'utilisateur propriétaire du logement.",
                "operationId": "b21dd931d5c8f0deb840a269dab36f46",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID du logement à valider",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succès - logement mis à jour avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "du logement mis à jour avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Non trouvé - L'ID du logement spécifié n'existe pas",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "L'ID du logement spécifié n'existe pas"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Erreur lors de la mise à jour du statut de l'annonce"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/index/ListeDesLogementsValideDisable": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des logements déjà verifiés mais desactivés par l'hôte",
                "description": "Récupère la liste des logements qui sont déjà verifiés mais desactivés par l'hôte.",
                "operationId": "cdaf1adedd49493c339254bcb959b641",
                "responses": {
                    "200": {
                        "description": "Succès - Liste des logements déjà verifiés mais desactivé par l'hôte",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/getHousingDestroyedByHote": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des logements supprimés par les hotes",
                "operationId": "7f66a3d2492a898a3b6fa590af152da3",
                "responses": {
                    "200": {
                        "description": "List of housing what be retrieve by hote"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/country_with_many_housing": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Top 10 des pays avec le plus grand nombre de logement sur la plateforme",
                "description": "Top 10 des pays avec le plus grand nombre de logement sur la plateforme",
                "operationId": "965ef3ce346043c59641fa0b093c100f",
                "responses": {
                    "200": {
                        "description": "Top 10 des pays avec le plus grand nombre de logement sur la plateforme"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/hote_with_many_housing": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Top 10 des utilisateurs(hotes) avec le plus grand nombre de logement",
                "description": "Top 10 des utilisateurs(hotes) avec le plus grand nombre de logement",
                "operationId": "dd8a7c0bf77b664fe4fca56f9c42323d",
                "responses": {
                    "200": {
                        "description": "Top 10 des utilisateurs(hotes) avec le plus grand nombre de logement"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/getTop10HousingByAverageNotes": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "To 10 des logements avec le plus grand nombre de note de manière générale(moyenne des notes des critère qui sera considéré)",
                "description": "To 10 des logements avec le plus grand nombre de note de manière générale(moyenne des notes des critère qui sera considéré)",
                "operationId": "9e333acddb9fe6c6d25e0ff2d7291ee5",
                "responses": {
                    "200": {
                        "description": "To 10 des logements avec le plus grand nombre de note de manière générale"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/HousingHoteInProgressForAdmin": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des logements non rempli complètement par les hôtes",
                "description": "Récupère la liste des logements des logements non rempli complètement par les hôtes.",
                "operationId": "651abea12aeeb3e85a30af8b89da6edb",
                "responses": {
                    "200": {
                        "description": "Liste des logements non rempli complètement par les hôtes",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Liste des logements non rempli complètement par les hôtes"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/housing_with_many_reservation": {
            "get": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Top 10 des logements avec le plus grand nombre de reservation",
                "description": "Top 10 des logements avec le plus grand nombre de reservation",
                "operationId": "f4ec0de5e414d9503e836cb80ad6c9ef",
                "responses": {
                    "200": {
                        "description": "List of housing"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/country_with_many_reservation": {
            "get": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Top 10 des pays avec le plus grand nombre de réservation sur la plateforme",
                "description": "Top 10 des pays avec le plus grand nombre de réservation sur la plateforme",
                "operationId": "db0af50e40c77ff50f9c6aab594eead5",
                "responses": {
                    "200": {
                        "description": "List of countries"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/housing_without_reservation": {
            "get": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Liste des logements avec 0 réservations",
                "description": "Liste des logements avec 0 réservations",
                "operationId": "e330db7413d17595f54432b95d368e3a",
                "responses": {
                    "200": {
                        "description": "List of housing"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/getReservationsCountByYear": {
            "get": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Evolution du Nombre total de réservation au fil des années",
                "description": "Evolution du Nombre total de réservation au fil des années",
                "operationId": "9c2969b408c03841366f2f18d9655422",
                "responses": {
                    "200": {
                        "description": "number of reservation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/getAllReservation": {
            "get": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Liste de toutes les réservations de la plateforme",
                "description": "Liste de toutes les réservations de la plateforme",
                "operationId": "de59530e8b44d094c54ef598cb4d289f",
                "responses": {
                    "200": {
                        "description": "List of reservation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/getUserReservations/{user}": {
            "get": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Liste et nombres des réservations d'un voyageur",
                "description": "Liste et nombres des réservations d'un voyageur",
                "operationId": "d70e23ddd1d63e359ea1759ade512d09",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "Get user ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste et nombres des réservations d'un voyageur"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/showDetailOfReservation/{idReservation}": {
            "get": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Détail d'une réservation donnée coté admin",
                "description": "Détail d'une réservation donée admin",
                "operationId": "1444459e5a77c43c8aa7d28e29b23d9a",
                "parameters": [
                    {
                        "name": "idReservation",
                        "in": "path",
                        "description": "Get reservation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Détail d'une réservation côté Admin"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/topTravelersWithMostReservations": {
            "get": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Top 10 des utilisateurs(voyageurs) avec le plus grand nombre de réservations",
                "description": "Top 10 des utilisateurs(voyageurs) avec le plus grand nombre de réservations",
                "operationId": "7babf9e4cc79e1f09e0c172629adbbb2",
                "responses": {
                    "200": {
                        "description": "op 10 des utilisateurs(voyageurs) avec le plus grand nombre de réservations"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/getAllReservationConfirmedForAdmin": {
            "get": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Liste de toutes les réservations confirmées par les hotes de la plateforme(admin)",
                "description": "Liste de toutes les réservations confirmées par les hotes de la plateforme(admin)",
                "operationId": "c51f1d53eeedcf57a16d79ed415a8d2c",
                "responses": {
                    "200": {
                        "description": "Liste de toutes les réservations confirmées par les hotes de la plateforme(admin)"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/getAllReservationRejectedForAdmin": {
            "get": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Liste de toutes les réservations rejetées par les hotes de la plateforme(admin)",
                "description": "Liste de toutes les réservations rejetées par les hotes de la plateforme(admin)",
                "operationId": "d7c65d5d9d76e821f72b8b7344c6fc8f",
                "responses": {
                    "200": {
                        "description": "Liste de toutes les réservations rejetées par les hotes de la plateforme(admin)"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/getAllReservationCanceledByTravelerForAdmin(admin)": {
            "get": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Liste de toutes les réservations annuler par les voyageurs de la plateforme(admin)",
                "description": "Liste de toutes les réservations annuler par les voyageurs de la plateforme(admin)",
                "operationId": "08dc8a814edbe2125bb86dc55759ea10",
                "responses": {
                    "200": {
                        "description": "Liste de toutes les réservations annuler par les voyageurs de la plateforme(admin)"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/getReservationsCountByYearAndMonth": {
            "get": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Obtenir le nombre de réservations par année et par mois",
                "description": "Récupère le nombre de réservations par année et par mois. Fournit le total annuel et le détail mensuel pour chaque année.",
                "operationId": "6001c675f0668e281fb3e796f3d0b99a",
                "responses": {
                    "200": {
                        "description": "Données récupérées avec succès.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message de retour",
                                            "type": "string"
                                        },
                                        "reservations_by_year_and_month": {
                                            "description": "Détails des réservations par année et par mois",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "year": {
                                                        "description": "Année",
                                                        "type": "integer"
                                                    },
                                                    "reservations_per_month": {
                                                        "description": "Nombre de réservations par mois",
                                                        "type": "array",
                                                        "items": {
                                                            "description": "Nombre de réservations",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "total_reservations": {
                                                        "description": "Nombre total de réservations pour l'année",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Aucune réservation trouvée.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message d'erreur",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/assignPermsToRole/{role}": {
            "post": {
                "tags": [
                    "ManageAccess"
                ],
                "summary": "Assign multiple permissions to a role",
                "operationId": "87095caaae6d318c1214fbbe1507d7cc",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "ID of the role",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "permissions"
                                ],
                                "properties": {
                                    "permissions": {
                                        "description": "List of permission IDs to assign to the role",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permissions assigned to role successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Permissions assigned to role successfully"
                                        },
                                        "assigned_permissions": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "permission": {
                                                        "description": "Name of the permission",
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "description": "Status of the permission assignment",
                                                        "type": "string",
                                                        "enum": [
                                                            "Assigned",
                                                            "Already assigned"
                                                        ]
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "role": {
                                            "description": "Details of the role assigned",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role or permission not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Role or permission not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/RevokePermsToRole/{role}": {
            "post": {
                "tags": [
                    "ManageAccess"
                ],
                "summary": "Revoke multiple permissions from a role",
                "operationId": "c1a02e2d12bccf1915976589226bdf5a",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "ID of the role",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "permissions"
                                ],
                                "properties": {
                                    "permissions": {
                                        "description": "List of permission IDs to revoke from the role",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permissions revoked from role successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Permissions revoked from role successfully"
                                        },
                                        "role": {
                                            "description": "Details of the role",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role or permission not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Role or permission not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/getUserRoles/{id}": {
            "get": {
                "tags": [
                    "ManageAccess"
                ],
                "summary": "Récupérer la liste des rôle assigner a un utilisateur",
                "operationId": "b6742e4d777803fc73125a2bf338727b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user ",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list taked succesfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "list taked succesfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "list don't taked ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "list don't taked "
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/assignRoleToUser/{id}/{role}": {
            "post": {
                "tags": [
                    "ManageAccess"
                ],
                "summary": "assigner un rôle à un utilisateur",
                "operationId": "73289d5cf8906707f20e8adfc9ea055f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user ",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "role",
                        "in": "path",
                        "description": "ID of the role ",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "role assigned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "role assigned successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "role not assigned",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "role not assigned"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/RevokeRoleToUser/{id}/{role}": {
            "post": {
                "tags": [
                    "ManageAccess"
                ],
                "summary": "retirer un rôle à un utilisateur",
                "operationId": "42bdc0513e477f3e7aba1d99a5965774",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user ",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "role",
                        "in": "path",
                        "description": "ID of the role ",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "revoke role to user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "revoke role to user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "role not revoked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "role not revoked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/assignPermsToUser/{id}": {
            "post": {
                "tags": [
                    "ManageAccess"
                ],
                "summary": "Assign multiple permissions to a user",
                "operationId": "7b7b7cdb4d2dc4c9257aef695d8e9fbb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "permissions"
                                ],
                                "properties": {
                                    "permissions": {
                                        "description": "List of permission IDs to assign to the role",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "permission grant to user successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "permission grant to user successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "permission not granted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "permission not granted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/revokePermsToUser/{id}": {
            "post": {
                "tags": [
                    "ManageAccess"
                ],
                "summary": "retirer multiple permissions to a user",
                "operationId": "32d452af59f4727519bcf0e3ab4b7653",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "permissions"
                                ],
                                "properties": {
                                    "permissions": {
                                        "description": "List of permission IDs to assign to the role",
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "permission revoked to user successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "permission revoked to user successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "permission not revoked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "permission not revoked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/getUserPerms/{id}": {
            "get": {
                "tags": [
                    "ManageAccess"
                ],
                "summary": "Récupérer la liste des permissions assigner a un utilisateur",
                "operationId": "ab55b11b507fcee44afc6e37c1133ae8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user ",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of user permissions granted to the user given",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "list taked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "list not taked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "list not taked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/usersWithRole/{role}": {
            "get": {
                "tags": [
                    "ManageAccess"
                ],
                "summary": "Liste des utilisateurs ayant un rôle donné",
                "operationId": "2c77c0b16cb8a56014ba67bee89396e6",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "ID of the role ",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of users with role given",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "list taked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "list not taked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "list not taked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/usersWithPerm/{permission}": {
            "get": {
                "tags": [
                    "ManageAccess"
                ],
                "summary": "Liste des utilisateurs ayant une permission donné ",
                "operationId": "a9eec18b7ee3f1ef48e5ba5914d504a1",
                "parameters": [
                    {
                        "name": "permission",
                        "in": "path",
                        "description": "Id of the permission ",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of users with permissions given",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "list taked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "list not taked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "list not taked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/usersRoles": {
            "get": {
                "tags": [
                    "ManageAccess"
                ],
                "summary": "liste des utilisateurs et leur rôles",
                "operationId": "8488be0fa00c562e397de2fafac1307c",
                "responses": {
                    "200": {
                        "description": "list of users and their roles"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/rolesPerms/{role}": {
            "get": {
                "tags": [
                    "ManageAccess"
                ],
                "summary": "liste des permissions d'un rôle",
                "operationId": "3837e934d3577cae5c551a005b5aa2fd",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "ID of the role ",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list of permissions'roles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "list of permissions'roles"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Users not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "list not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/rolesPermsCount/{role}": {
            "get": {
                "tags": [
                    "ManageAccess"
                ],
                "summary": "nombre des permissions d'un rôle",
                "operationId": "e6f35c29f024b8da36571a6a9d2f47ad",
                "parameters": [
                    {
                        "name": "role",
                        "in": "path",
                        "description": "ID of the role ",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "count of permissions of role",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "count done successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "count not done ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "count not done "
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/switchToHote": {
            "post": {
                "tags": [
                    "ManageAccess"
                ],
                "summary": "Passer au role hote",
                "operationId": "aedf1d55a26b5c612c813bb49f15a059",
                "responses": {
                    "200": {
                        "description": "move to hote"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/switchToAdmin": {
            "post": {
                "tags": [
                    "ManageAccess"
                ],
                "summary": "Passer au role admin",
                "operationId": "ec66b9280a4e344d87c2cbdc24aa0e42",
                "responses": {
                    "200": {
                        "description": "move to admin"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/switchToTraveler": {
            "post": {
                "tags": [
                    "ManageAccess"
                ],
                "summary": "Passer au role voyageur",
                "operationId": "0bf453f6289ad809f9cb3d5d8af08159",
                "responses": {
                    "200": {
                        "description": "move to traveler"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/usersCountByRole": {
            "get": {
                "tags": [
                    "ManageAccess"
                ],
                "summary": "Recupère chaque role avec le nombre d'utilisateur associé",
                "operationId": "2ae3e9c55df8a3fee9575ca17b7ea243",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/category/VerifiednotBlocknotDelete": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get all category for admin (not blocked and not deleted)",
                "operationId": "05aff89055eedef2c690a88476dfef9f",
                "responses": {
                    "200": {
                        "description": "List of category with categories"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/category/VerifiedBlocknotDelete": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get all category for admin (blocked and not deleted)",
                "operationId": "aff763e8613a72f3bd099ce0203faef2",
                "responses": {
                    "200": {
                        "description": "List of category with categories"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/category/indexUnverified": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get all category for admin (blocked and not deleted)",
                "operationId": "e3a0ce2f6b50049e5912f255dd6002b9",
                "responses": {
                    "200": {
                        "description": "List of category with categories"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/category/VerifiednotBlockDelete": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get all category  (not blocked and deleted))",
                "operationId": "77ba431f86988e810376b6ed82ba9894",
                "responses": {
                    "200": {
                        "description": "List of category with categories"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/category/store": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Create a new category ",
                "operationId": "24d7fd33662f3e469ba90283e634bf99",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Bureau,..."
                                    },
                                    "icone": {
                                        "description": "Image de profil d'identité (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category  created successfully"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/category/show/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get a specific category by ID",
                "operationId": "f401da07600b39baede4342b6a41924e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category details"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/category/updateName/{id}": {
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Update category by ID",
                "operationId": "2dc070e6bba99bb4ebdb7697cf4d2fd3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "cuisine,etc"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/category/updateIcone/{id}": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Update a category icone by ID",
                "operationId": "c287c1e8f80edf30d1deaa3038f5fbe9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "icone": {
                                        "description": "Image de profil d'identité (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Category updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/category/destroy/{id}": {
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete category by ID",
                "operationId": "b4c3335dfa9225a91e47b734f7b3b636",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted successfully"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/category/block/{id}": {
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Block a category",
                "operationId": "22046a1a32576eda531adca972fa6fbe",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to block",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category successfully blocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Category successfully blocked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/category/unblock/{id}": {
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Unblock a category",
                "operationId": "86c289631af4996100ee648dc1ff9f16",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to unblock",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category successfully unblocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Category successfully unblocked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/category/makeVerified/{id}": {
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "make verified an category",
                "operationId": "4cb8d1b7e5fa374cd6eddb126702af4e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to verified",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "category successfully verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "category successfully verified"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/charge/index": {
            "get": {
                "tags": [
                    "Charge"
                ],
                "summary": "Get all charges",
                "operationId": "df0946fd1835b182d821bec278135065",
                "responses": {
                    "200": {
                        "description": "List of charges"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/charge/store": {
            "post": {
                "tags": [
                    "Charge"
                ],
                "summary": "Create a new charge ",
                "operationId": "076a494a8b2e1ab2b15d6ee7a598cee1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "électricité"
                                    },
                                    "icone": {
                                        "description": "Image de profil d'identité (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Charge  created successfully"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/charge/updateName/{id}": {
            "put": {
                "tags": [
                    "Charge"
                ],
                "summary": "Update a charge by ID",
                "operationId": "f2b8cd3587485dcac17945d01366ab49",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the charge",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "charge1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Charge updated successfully"
                    },
                    "404": {
                        "description": "Charge not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/charge/updateIcone/{id}": {
            "post": {
                "tags": [
                    "Charge"
                ],
                "summary": "Update an charge icone by ID",
                "operationId": "a3a6729aca0fb2e0066eb8949af25c5d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the charge to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "icone": {
                                        "description": "Image de profil d'identité (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Charge updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Charge updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Charge not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Charge not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/charge/destroy/{id}": {
            "delete": {
                "tags": [
                    "Charge"
                ],
                "summary": "Delete a charge by ID",
                "operationId": "4b3ab476fbffca09053692bbfe3a9632",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the charge",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Charge deleted successfully"
                    },
                    "404": {
                        "description": "Charge not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/commission/updateCommissionValueByAnother": {
            "put": {
                "tags": [
                    "Commission"
                ],
                "summary": "Remplacer la valeur d'une commission par défaut par une autre valeur",
                "operationId": "feaeb0c7f0c7ab9676242398506632f0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "commission",
                                    "valeur_commission"
                                ],
                                "properties": {
                                    "commission": {
                                        "type": "integer",
                                        "example": 13
                                    },
                                    "valeur_commission": {
                                        "type": "integer",
                                        "example": 20
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Commission successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Commissions updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Commission not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Commission not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/commission/updateCommissionForSpecifiqueUser": {
            "post": {
                "tags": [
                    "Commission"
                ],
                "summary": "Modifier la valeur de la commission pour un ou plusieurs utilisateurs donnés",
                "operationId": "1d73235380f9f99c3348b602bbaca9d6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "commission_percentage",
                                    "user_ids"
                                ],
                                "properties": {
                                    "commission_percentage": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "user_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": "[1, 2, ...]"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Commission updated successfully"
                    },
                    "400": {
                        "description": "Invalid input data"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/commission/usersWithCommission/{commission}": {
            "get": {
                "tags": [
                    "Commission"
                ],
                "summary": "Récupérer les utilisateurs associés à une commission spécifique",
                "operationId": "7a39912373a807839cf0e4f746d4d96c",
                "parameters": [
                    {
                        "name": "commission",
                        "in": "path",
                        "description": "value of the commission",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Commission details"
                    },
                    "404": {
                        "description": "Commission not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/criteria/index": {
            "get": {
                "tags": [
                    "Criteria"
                ],
                "summary": "Get all criterias",
                "operationId": "7dbf0f9f3d1666b6889248f75f06347f",
                "responses": {
                    "200": {
                        "description": "List of criterias"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/criteria/store": {
            "post": {
                "tags": [
                    "Criteria"
                ],
                "summary": "Create a new criteria ",
                "operationId": "194536cd1f7b2b768f157ed81dd24f4f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "communication , sociabilité"
                                    },
                                    "icone": {
                                        "description": "Image de profil d'identité (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Criteria  created successfully"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/criteria/show/{id}": {
            "get": {
                "tags": [
                    "Criteria"
                ],
                "summary": "Get a specific criteria by ID",
                "operationId": "c5804b716743da1ef2005b8897681622",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the criteria",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Criteria details"
                    },
                    "404": {
                        "description": "Criteria not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/criteria/updateName/{id}": {
            "put": {
                "tags": [
                    "Criteria"
                ],
                "summary": "Update a criteria name by ID",
                "operationId": "8b1516d0c52538c647b8079b5525b4c1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the criteria",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "français,anglais,etc"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Criteria updated successfully"
                    },
                    "404": {
                        "description": "Criteria not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/criteria/updateIcone/{id}": {
            "post": {
                "tags": [
                    "Criteria"
                ],
                "summary": "Update a criteria icone by ID",
                "operationId": "12316cd0d39127c5b9849a07f0c7a1fc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the criteria to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "icone": {
                                        "description": "Image de profil d'identité (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Criteria updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Criteria updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Criteria not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Criteria not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/criteria/destroy/{id}": {
            "delete": {
                "tags": [
                    "Criteria"
                ],
                "summary": "Delete a criteria by ID",
                "operationId": "f367c91b883b265b9dd270e4a87f8072",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the criteria",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Criteria deleted successfully"
                    },
                    "404": {
                        "description": "Criteria not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/criteria/block/{id}": {
            "put": {
                "tags": [
                    "Criteria"
                ],
                "summary": "Block a criteria",
                "operationId": "d9b67b703bd189f2441d0e368d2ee880",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the criteria to block",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Criteria successfully blocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Criteria successfully blocked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Criteria not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Criteria not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/criteria/unblock/{id}": {
            "put": {
                "tags": [
                    "Criteria"
                ],
                "summary": "Unblock a criteria",
                "operationId": "bebc4b734e471816ff7371e7d05e118c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the criteria to unblock",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Criteria successfully unblocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Criteria successfully unblocked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Criteria not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Criteria not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/document/index": {
            "get": {
                "tags": [
                    "Document"
                ],
                "summary": "Get all documents",
                "operationId": "18b041bd5f7edb7119fb8dbe43af342b",
                "responses": {
                    "200": {
                        "description": "List of documents"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/document/store": {
            "post": {
                "tags": [
                    "Document"
                ],
                "summary": "Create a new document",
                "operationId": "17e4c777de0baafb108dcd06ecb2dab6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "piece d'identite, CIP, passport"
                                    },
                                    "is_actif": {
                                        "type": "boolen",
                                        "example": "0,1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Document created successfully"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/document/show/{id}": {
            "get": {
                "tags": [
                    "Document"
                ],
                "summary": "Get a specific document by ID",
                "operationId": "928d0644038c7f8aaf9dcbf4c38d3c02",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the document",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document details"
                    },
                    "404": {
                        "description": "Document not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/document/update/{id}": {
            "put": {
                "tags": [
                    "Document"
                ],
                "summary": "Update a document by ID",
                "operationId": "cb56a092fc7025a59779fbc50be32a68",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the document",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "pice of identity, CIP, passport"
                                    },
                                    "is_actif": {
                                        "type": "booleen",
                                        "example": "0,1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Document updated successfully"
                    },
                    "404": {
                        "description": "Document not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/document/destroy/{id}": {
            "delete": {
                "tags": [
                    "Document"
                ],
                "summary": "Delete a document by ID",
                "operationId": "2ae1254815a702c0023426862d55abc9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the document",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Document deleted successfully"
                    },
                    "404": {
                        "description": "Document not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/document/block/{id}": {
            "put": {
                "tags": [
                    "Document"
                ],
                "summary": "Block a document",
                "operationId": "40f6ea3080f60bbecc36bee68cb2d317",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the document to block",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document successfully blocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Document successfully blocked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Document not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Document not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/document/unblock/{id}": {
            "put": {
                "tags": [
                    "Document"
                ],
                "summary": "Unblock a document",
                "operationId": "2fa44264cf0751680c7dd5a51a0b7d67",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the document to unblock",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document successfully unblocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Document successfully unblocked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Document not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Document not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/document/document_actif": {
            "get": {
                "tags": [
                    "Document"
                ],
                "summary": "Get all documents",
                "operationId": "752ac1e48909981be75ed4105a19c19b",
                "responses": {
                    "200": {
                        "description": "List of inactif documents"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/document/document_inactif": {
            "get": {
                "tags": [
                    "Document"
                ],
                "summary": "Get all documents",
                "operationId": "7ebcd1e85a833b11dfa047184c3f4e36",
                "responses": {
                    "200": {
                        "description": "List of actif documents"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/document/active/{id}": {
            "put": {
                "tags": [
                    "Document"
                ],
                "summary": "active a document",
                "operationId": "f890f05dc81c3eeb50464a0d4cf213be",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the document to active",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document successfully active",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Document successfully active"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Document not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Document not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/document/inactive/{id}": {
            "put": {
                "tags": [
                    "Document"
                ],
                "summary": "inactive a document",
                "operationId": "711dc0c1c98d801734d2762ecf7ecfe6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the document to inactive",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document successfully inactive",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Document successfully inactive"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Document not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Document not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/equipment/VerifiedBlocknotDelete": {
            "get": {
                "tags": [
                    "Equipment"
                ],
                "summary": "Get all equipments (verified, blocked, not deleted)",
                "operationId": "70fb55de646a78eb53231ff1533d1ee0",
                "responses": {
                    "200": {
                        "description": "List of equipments with categories"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/equipment/VerifiednotBlocknotDelete": {
            "get": {
                "tags": [
                    "Equipment"
                ],
                "summary": "Get all equipments (verified, not blocked, not deleted)",
                "operationId": "836e2890274e3b4dfe4097e9b015f868",
                "responses": {
                    "200": {
                        "description": "List of equipments with categories"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/equipment/VerifiednotBlockDelete": {
            "get": {
                "tags": [
                    "Equipment"
                ],
                "summary": "Get all equipments (verified, not blocked,  deleted)",
                "operationId": "209fc75b006b94f29455ce3cc083989f",
                "responses": {
                    "200": {
                        "description": "List of equipments with categories"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/equipment/indexUnverified": {
            "get": {
                "tags": [
                    "Equipment"
                ],
                "summary": "Get all equipments unverified",
                "operationId": "9ae3607fbf59f0d48434d1edc84b4462",
                "responses": {
                    "200": {
                        "description": "List of equipments with categories"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/equipment/store": {
            "post": {
                "tags": [
                    "Equipment"
                ],
                "summary": "Create a new equipment ",
                "operationId": "8c93afb3e49a33e736c02a23845b7ca4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "climatiseur"
                                    },
                                    "category_id": {
                                        "type": "string",
                                        "example": "5"
                                    },
                                    "icone": {
                                        "description": "Image de profil d'identité (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Equipment  created successfully"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/equipment/show/{id}": {
            "get": {
                "tags": [
                    "Equipment"
                ],
                "summary": "Get information about a specific equipment",
                "operationId": "b7f43156c6f9e3598c05a56a6d737618",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the equipment",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information about the specified equipment "
                    },
                    "404": {
                        "description": "Equipment not found for the specified ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Équipement introuvable ."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/equipment/updateName/{id}": {
            "put": {
                "tags": [
                    "Equipment"
                ],
                "summary": "Update an equipment name by ID",
                "operationId": "fef572acf9ebe3c5bdc5dbc520092381",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the equipment to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "category_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "New Equipment Name"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Equipment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Equipment updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Equipment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Equipment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/equipment/updateCategory/{id}": {
            "put": {
                "tags": [
                    "Equipment"
                ],
                "summary": "Update an equipment category by ID",
                "operationId": "89ebb29a821191fad5d1eb8093be32ea",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the equipment to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "category_id"
                                ],
                                "properties": {
                                    "category_id": {
                                        "type": "string",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Equipment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Equipment updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Equipment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Equipment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/equipment/updateIcone/{id}": {
            "post": {
                "tags": [
                    "Equipment"
                ],
                "summary": "Update an equipment icone by ID",
                "operationId": "a8a00f2c0c0ff38cf47e25b549601cfc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the equipment to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "icone": {
                                        "description": "Image de profil d'identité (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Equipment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Equipment updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Equipment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Equipment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/equipment/destroy/{id}": {
            "delete": {
                "tags": [
                    "Equipment"
                ],
                "summary": "Delete an equipment by ID",
                "operationId": "bfd597dbedfe15972170f1f324a88fa9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the equipment to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Equipment deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Equipment deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Equipment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Equipment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/equipment/block/{id}": {
            "put": {
                "tags": [
                    "Equipment"
                ],
                "summary": "Block an equipment",
                "operationId": "3ac64c5c0f2861b5a9daec129e0846f4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the equipment to block",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Equipment successfully blocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Equipment successfully blocked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Equipment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Equipment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/equipment/unblock/{id}": {
            "put": {
                "tags": [
                    "Equipment"
                ],
                "summary": "Unblock an equipment",
                "operationId": "eef800525531fd611afe7b5db6883779",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the equipment to unblock",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Equipment successfully unblocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Equipment successfully unblocked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Equipment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Equipment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/equipment/makeVerified/{id}": {
            "put": {
                "tags": [
                    "Equipment"
                ],
                "summary": "make verified an equipment",
                "operationId": "466f22fa1bee3feb3ac505310f59bbc9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the equipment to verified",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Equipment successfully verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Equipment successfully verified"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Equipment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Equipment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/addfavorites": {
            "post": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Ajouter un logement aux favoris de l'utilisateur",
                "description": "Ajoute un logement aux favoris de l'utilisateur authentifié.",
                "operationId": "addToFavorites",
                "requestBody": {
                    "description": "Données requises pour ajouter un logement aux favoris",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "housing_id"
                                ],
                                "properties": {
                                    "housing_id": {
                                        "description": "ID du logement à ajouter aux favoris",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Le logement a été ajouté aux favoris avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Le logement a été ajouté aux favoris avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Le logement est déjà en favori pour l'utilisateur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Le logement est déjà en favori."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Non autorisé - L'utilisateur n'est pas authentifié",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Une erreur s'est produite lors de l'ajout aux favoris."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/removefromfavorites/{housingId}": {
            "delete": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Retirer un logement des favoris de l'utilisateur",
                "description": "Retire un logement des favoris de l'utilisateur authentifié.",
                "operationId": "removeFromFavorites",
                "parameters": [
                    {
                        "name": "housingId",
                        "in": "path",
                        "description": "ID du logement à retirer des favoris",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Le logement a été retiré des favoris avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Le logement a été retiré des favoris avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Le logement n'est pas en favori pour l'utilisateur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Le logement n'est pas en favori."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Non autorisé - L'utilisateur n'est pas authentifié",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Une erreur s'est produite lors du retrait des favoris."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/favorites": {
            "get": {
                "tags": [
                    "Favorites"
                ],
                "summary": "Récupérer la liste des logements en favoris de l'utilisateur",
                "description": "Récupère la liste des logements en favoris de l'utilisateur authentifié. Seuls les logements qui ne sont ni bloqués ni supprimés seront inclus dans la liste des favoris.",
                "operationId": "getFavorites",
                "responses": {
                    "200": {
                        "description": "Liste des logements en favoris de l'utilisateur",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Non autorisé - L'utilisateur n'est pas authentifié",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Une erreur s'est produite lors de la récupération des favoris."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/reservationsConfirmedByHost": {
            "get": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Liste des réservations confirmées par l'hote connecté",
                "description": "Liste des réservations confirmées par l'hote connecté",
                "operationId": "86707da74d9435c67277d6917a557212",
                "responses": {
                    "200": {
                        "description": "Liste des réservations confirmées par l'hote connecté"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/reservationsRejectedByHost": {
            "get": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Liste des réservations rejetées par l'hote connecté",
                "description": "Liste des réservations rejetées par l'hote connecté",
                "operationId": "4196c0c82f9ebc4068298e9139ffc331",
                "responses": {
                    "200": {
                        "description": "Liste des réservations rejetées par l'hote connecté"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/reservationsCanceledByTravelerForHost": {
            "get": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Liste des réservations appartenant à l'hôte connecté annulées par le voyageur",
                "description": "Liste des réservations appartenant à l'hôte connecté annulées par le voyageur",
                "operationId": "77f20494517f2ae781c94ce5387d3e59",
                "responses": {
                    "200": {
                        "description": "Liste des réservations appartenant à l'hôte connecté annulées par le voyageur"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/reservationsNotConfirmedYetByHost": {
            "get": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Liste des réservations en attente de confirmation pour l'hote connecté",
                "description": "Liste des réservations en attente de confirmation pour l'hote connecté",
                "operationId": "031b430bbe6197be30c4eb93a7925b84",
                "responses": {
                    "200": {
                        "description": "Liste des réservations en attente de confirmation pour l'hote connecté"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/category/photo/{photoid}": {
            "delete": {
                "tags": [
                    "Housing Category Photo"
                ],
                "summary": "Supprimer une photo d'une categorie",
                "description": "Supprime une photo d'une categorie.",
                "operationId": "8b64b7e32ecbd602cb9d7711a14877fc",
                "parameters": [
                    {
                        "name": "photoid",
                        "in": "path",
                        "description": "ID de la photo à supprimer",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "La photo a été supprimée avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "La photo a été supprimée avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Photo non trouvée",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Photo non trouvée"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Une erreur s'est produite lors de la suppression de la photo."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/category/default/add": {
            "post": {
                "tags": [
                    "Housing Category Photo"
                ],
                "summary": "Ajouter une catégorie existant par défaut à un logement",
                "description": "Ajoute une nouvelle catégorie de logement avec les informations fournies",
                "operationId": "c05e37f79356836f1facf9bfec89e70e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "housing_id",
                                    "category_id",
                                    "number",
                                    "photos[]"
                                ],
                                "properties": {
                                    "housing_id": {
                                        "description": "ID du logement",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "category_id": {
                                        "description": "ID de la catégorie",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "number": {
                                        "description": "Nombre de catégorie que possède le logement",
                                        "type": "integer",
                                        "example": "3"
                                    },
                                    "photos[]": {
                                        "type": "array",
                                        "items": {
                                            "description": "Image de la catégorie (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Catégorie de logement ajoutée avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Catégorie de logement ajoutée avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur de validation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflit - Une entrée pour cette catégorie et ce logement existe déjà",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Une entrée pour cette catégorie et ce logement existe déjà"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/category/default/addNew": {
            "post": {
                "tags": [
                    "Housing Category Photo"
                ],
                "summary": "Ajouter une catégorie inexistante par défaut à un logement",
                "description": "Ajouter une nouvelle catégorie inexistante par defaut à un logement",
                "operationId": "afad798ad31547e7940fd19a73c3444c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "housing_id",
                                    "category_name",
                                    "number",
                                    "photos[]"
                                ],
                                "properties": {
                                    "housing_id": {
                                        "description": "ID du logement",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "category_name": {
                                        "description": "Nom de la nouvelle catégorie",
                                        "type": "string",
                                        "example": "Nouvelle Catégorie"
                                    },
                                    "number": {
                                        "description": "Nombre de catégorie que possède le logement",
                                        "type": "integer",
                                        "example": "3"
                                    },
                                    "photos[]": {
                                        "type": "array",
                                        "items": {
                                            "description": "Image de la catégorie (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Catégorie de logement ajoutée avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Catégorie de logement ajoutée avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur de validation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflit - Une entrée pour cette catégorie et ce logement existe déjà",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Une entrée pour cette catégorie et ce logement existe déjà"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/category/default/invalid": {
            "get": {
                "tags": [
                    "Housing Category Photo"
                ],
                "summary": "Récupérer les catégories existantes par défaut des logement en attente de validation",
                "description": "Retourne une liste des catégories existantes par défaut des logement en attente de validation et les photos des catégories associées.",
                "operationId": "275fb5e3036d6f615eb3dcde726593dd",
                "responses": {
                    "200": {
                        "description": "Succès - Liste des logements par catégorie",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/category/default/{housing_id}/{category_id}/validate": {
            "put": {
                "tags": [
                    "Housing Category Photo"
                ],
                "summary": "Valider une catégorie existante par défaut en attente de validation",
                "description": "Valide une catégorie existante par défaut en attente de validation en mettant à jour le statut is_verified de housing_category_file à true.",
                "operationId": "12a2332f85ef2bbc75f7d5294f64136a",
                "parameters": [
                    {
                        "name": "housing_id",
                        "in": "path",
                        "description": "ID du logement associé à la catégorie",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "path",
                        "description": "ID de la catégorie à valider",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succès - Catégorie validée avec succès"
                    },
                    "404": {
                        "description": "Erreur - Catégorie non trouvée"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/category/unexist/invalid": {
            "get": {
                "tags": [
                    "Housing Category Photo"
                ],
                "summary": "Récupérer les catégories inexistantes par défaut des logement en attente de validation",
                "description": "Retourne une liste des catégories inexistantes par défaut des logement en attente de validation et les photos des catégories associées.",
                "operationId": "2a3edc07db8bb2f383030930c6d915cf",
                "responses": {
                    "200": {
                        "description": "Succès - Liste des logements par catégorie",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/category/unexist/{housing_id}/{category_id}/validate": {
            "put": {
                "tags": [
                    "Housing Category Photo"
                ],
                "summary": "Valider une catégorie inexistante par défaut en attente de validation",
                "description": "Valide une catégorie inexistante par défaut en attente de validation en mettant à jour le statut is_verified de housing_category_file à true.",
                "operationId": "13afdc480be92918b85ffcd9d61f5802",
                "parameters": [
                    {
                        "name": "housing_id",
                        "in": "path",
                        "description": "ID du logement associé à la catégorie",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "path",
                        "description": "ID de la catégorie à valider",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succès - Catégorie validée avec succès"
                    },
                    "404": {
                        "description": "Erreur - Catégorie non trouvée"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/category/{housing_id}/{category_id}/detail": {
            "get": {
                "tags": [
                    "Housing Category Photo"
                ],
                "summary": "Obtenir les détails d'une catégorie donné de logement",
                "description": "Retourne les détails d'une catégorie de logement spécifique, y compris les informations détaillées du logement,les photos de la categorie et de l'utilisateur associé.",
                "operationId": "c94d37709cbb3459783127d37eaf0605",
                "parameters": [
                    {
                        "name": "housing_id",
                        "in": "path",
                        "description": "ID du logement",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "path",
                        "description": "ID de la catégorie",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succès - Détails de la catégorie de logement retournés",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/{housingId}/category/{categoryId}/delete": {
            "delete": {
                "tags": [
                    "Housing Category Photo"
                ],
                "summary": "Supprimer une catégorie et ses fichiers associés d'un logement",
                "operationId": "997558843722dbe021bb329d449366ce",
                "parameters": [
                    {
                        "name": "housingId",
                        "in": "path",
                        "description": "ID du logement",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "ID de la catégorie",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Catégorie et fichiers associés supprimés avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Catégorie et fichiers associés supprimés avec succès."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Aucune relation entre le logement et la catégorie trouvée",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Aucune relation entre le logement et la catégorie trouvée."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/{housingId}/category/{categoryId}/photos/add": {
            "post": {
                "tags": [
                    "Housing Category Photo"
                ],
                "summary": "Ajouter des photos à une catégorie d'un logement",
                "description": "Ajouter des photos à une catégorie d'un logement",
                "operationId": "45670d744e307386578a1d77f2cf6a0a",
                "parameters": [
                    {
                        "name": "housingId",
                        "in": "path",
                        "description": "ID du logement",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "ID de la catégorie",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "photos[]"
                                ],
                                "properties": {
                                    "photos[]": {
                                        "type": "array",
                                        "items": {
                                            "description": "Image de la catégorie (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Photos ajoutées avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Photos ajoutées avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur de validation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflit - Une entrée pour cette catégorie et ce logement existe déjà",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Une entrée pour cette catégorie et ce logement existe déjà"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/category/photo/unverified": {
            "get": {
                "tags": [
                    "Housing Category Photo"
                ],
                "summary": "Récupérer les photos des catégories(pièce) en attente de validation",
                "operationId": "fb7430d6cdba90c427bb4177a5a3900d",
                "responses": {
                    "200": {
                        "description": "Liste des  photos des catégories(pièce) en attente de validation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "housing_id": {
                                                "description": "ID du logement",
                                                "type": "integer"
                                            },
                                            "category_id": {
                                                "description": "ID de la catégorie",
                                                "type": "integer"
                                            },
                                            "file_path": {
                                                "description": "Chemin du fichier",
                                                "type": "string"
                                            },
                                            "housing_name": {
                                                "description": "Nom du logement",
                                                "type": "string"
                                            },
                                            "housing_address": {
                                                "description": "Adresse du logement",
                                                "type": "string"
                                            },
                                            "owner_name": {
                                                "description": "Nom du propriétaire",
                                                "type": "string"
                                            },
                                            "owner_email": {
                                                "description": "E-mail du propriétaire",
                                                "type": "string"
                                            },
                                            "category_name": {
                                                "description": "Nom de la catégorie",
                                                "type": "string"
                                            },
                                            "is_verified": {
                                                "description": "Statut de vérification",
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message d'erreur",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/category/photo/{id}/validate": {
            "put": {
                "tags": [
                    "Housing Category Photo"
                ],
                "summary": "Mettre à jour le statut de vérification d'un fichier de logement",
                "operationId": "e173daedf2f5ad4b1fb00820c13905a6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID du housing_category_file",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Statut de vérification mis à jour avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message de confirmation",
                                            "type": "string"
                                        },
                                        "is_verified": {
                                            "description": "Statut de vérification",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Fichier non trouvé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message d'erreur",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message d'erreur",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/charge/addChargeToHousing": {
            "post": {
                "tags": [
                    "Housing Charge"
                ],
                "summary": "Ajouter une charge au logement",
                "operationId": "3886aeec633676358bff62cb5f57f93b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "housingId": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "hote": {
                                        "description": "Informations sur les charges de l'hôte",
                                        "properties": {
                                            "idCharge": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                }
                                            },
                                            "valeurCharge": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "traveler": {
                                        "description": "Informations sur les charges du voyageur",
                                        "properties": {
                                            "idCharge": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                }
                                            },
                                            "valeurCharge": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Charge ajoutée avec succès au logement"
                    },
                    "401": {
                        "description": "Credentials invalides"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/charge/listelogementcharge/{housingId}": {
            "get": {
                "tags": [
                    "Housing Charge"
                ],
                "summary": "Get all charges for a specific housing",
                "operationId": "c5220515de93d562aa65f27cca76c164",
                "parameters": [
                    {
                        "name": "housingId",
                        "in": "path",
                        "description": "L'ID du logement pour lequel récupérer les équipements",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of charges"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/charge": {
            "delete": {
                "tags": [
                    "Housing Charge"
                ],
                "summary": "Supprime des charges associés à un logement",
                "description": "Supprime l'association entre plusieurs charges et un logement à partir des IDs des associations.",
                "operationId": "d1f0cb69cc2a5ce0ce68887d415cf4de",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "housingChargeIds"
                                ],
                                "properties": {
                                    "housingChargeIds": {
                                        "description": "Tableau contenant les IDs des charges du logement à supprimer",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Les charges du logement ont été retirés avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Les charges du logement ont été retirés avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/index/ListeDesPhotosLogementAcceuil/{id}": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des photos d'un logement",
                "description": "Récupère la liste des photos associées à un logement spécifié par son ID.",
                "operationId": "a6608a36a7450980abac9bd29f2290a2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID du logement",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des photos du logement récupérée avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id_housing": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "photos_logement": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id_photo": {
                                                                "type": "integer",
                                                                "example": "1"
                                                            },
                                                            "path": {
                                                                "type": "string",
                                                                "example": "http://exemple.com/photos/1"
                                                            },
                                                            "extension": {
                                                                "type": "string",
                                                                "example": "jpg"
                                                            },
                                                            "is_couverture": {
                                                                "type": "boolean",
                                                                "example": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "categories": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "category_id": {
                                                                "type": "integer",
                                                                "example": "1"
                                                            },
                                                            "category_name": {
                                                                "type": "string",
                                                                "example": "Catégorie"
                                                            },
                                                            "photos_category": {
                                                                "type": "array",
                                                                "items": {
                                                                    "properties": {
                                                                        "file_id": {
                                                                            "type": "integer",
                                                                            "example": "1"
                                                                        },
                                                                        "path": {
                                                                            "type": "string",
                                                                            "example": "http://exemple.com/photos/1"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Le logement spécifié n'existe pas",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Le logement spécifié n'existe pas"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logement/index/ListeDesLogementsAcceuil": {
            "post": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des logements pour l'accueil et pour l'admin en même temps.",
                "description": "Récupère la liste des logements disponibles et vérifiés pour l'accueil.c'est cette route qui vous envoit les logements à afficher sur le site ",
                "operationId": "a3b238531dbd2117bd75fe12636926da",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "description": "ID de l'utilisateur, facultatif",
                                        "type": "integer",
                                        "example": 123
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Liste des logements récupérée avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id_housing": {
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "housing_type_id": {
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "housing_type_name": {
                                                        "type": "string",
                                                        "example": "Appartement"
                                                    },
                                                    "property_type_id": {
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "property_type_name": {
                                                        "type": "string",
                                                        "example": "Location"
                                                    },
                                                    "user_id": {
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "name_housing": {
                                                        "type": "string",
                                                        "example": "Bel appartement"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Description de l'appartement"
                                                    },
                                                    "number_of_bed": {
                                                        "type": "integer",
                                                        "example": "2"
                                                    },
                                                    "number_of_traveller": {
                                                        "type": "integer",
                                                        "example": "4"
                                                    },
                                                    "sit_geo_lat": {
                                                        "type": "string",
                                                        "example": "48.858844"
                                                    },
                                                    "sit_geo_lng": {
                                                        "type": "string",
                                                        "example": "2.294351"
                                                    },
                                                    "country": {
                                                        "type": "string",
                                                        "example": "France"
                                                    },
                                                    "address": {
                                                        "type": "string",
                                                        "example": "10 Rue de Rivoli"
                                                    },
                                                    "city": {
                                                        "type": "string",
                                                        "example": "Paris"
                                                    },
                                                    "department": {
                                                        "type": "string",
                                                        "example": "Île-de-France"
                                                    },
                                                    "is_camera": {
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "is_accepted_animal": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "is_animal_exist": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "is_disponible": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "interior_regulation": {
                                                        "type": "string",
                                                        "example": "Regulations..."
                                                    },
                                                    "telephone": {
                                                        "type": "string",
                                                        "example": "0123456789"
                                                    },
                                                    "code_pays": {
                                                        "type": "string",
                                                        "example": "FR"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "verified"
                                                    },
                                                    "arrived_independently": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "is_instant_reservation": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "maximum_duration": {
                                                        "type": "integer",
                                                        "example": "30"
                                                    },
                                                    "minimum_duration": {
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "time_before_reservation": {
                                                        "type": "integer",
                                                        "example": "2"
                                                    },
                                                    "cancelation_condition": {
                                                        "type": "string",
                                                        "example": "Conditions..."
                                                    },
                                                    "departure_instruction": {
                                                        "type": "string",
                                                        "example": "Instructions..."
                                                    },
                                                    "is_deleted": {
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "is_blocked": {
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "photos_logement": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id_photo": {
                                                                    "type": "integer",
                                                                    "example": "1"
                                                                },
                                                                "path": {
                                                                    "type": "string",
                                                                    "example": "http://exemple.com/photos/1"
                                                                },
                                                                "extension": {
                                                                    "type": "string",
                                                                    "example": "jpg"
                                                                },
                                                                "is_couverture": {
                                                                    "type": "boolean",
                                                                    "example": true
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": "1"
                                                            },
                                                            "lastname": {
                                                                "type": "string",
                                                                "example": "Doe"
                                                            },
                                                            "firstname": {
                                                                "type": "string",
                                                                "example": "John"
                                                            },
                                                            "telephone": {
                                                                "type": "string",
                                                                "example": "0123456789"
                                                            },
                                                            "code_pays": {
                                                                "type": "string",
                                                                "example": "FR"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "john@example.com"
                                                            },
                                                            "country": {
                                                                "type": "string",
                                                                "example": "France"
                                                            },
                                                            "file_profil": {
                                                                "type": "string",
                                                                "example": "http://exemple.com/photo_profil/1"
                                                            },
                                                            "city": {
                                                                "type": "string",
                                                                "example": "Paris"
                                                            },
                                                            "address": {
                                                                "type": "string",
                                                                "example": "10 Rue de Rivoli"
                                                            },
                                                            "sexe": {
                                                                "type": "string",
                                                                "example": "male"
                                                            },
                                                            "postal_code": {
                                                                "type": "string",
                                                                "example": "75001"
                                                            },
                                                            "is_admin": {
                                                                "type": "boolean",
                                                                "example": false
                                                            },
                                                            "is_traveller": {
                                                                "type": "boolean",
                                                                "example": true
                                                            },
                                                            "is_hote": {
                                                                "type": "boolean",
                                                                "example": false
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Aucun logement disponible trouvé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Aucun logement disponible trouvé"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logement/ShowDetailLogementAcceuil": {
            "post": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des détails possibles d'un logement donné côté acceuil",
                "description": "Récupère les détails d'un logement spécifié par son ID. Prend les paramètres au format JSON dans le corps de la requête.",
                "operationId": "59c5076b80620c37da66d20c303cfa54",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "housing_id"
                                ],
                                "properties": {
                                    "housing_id": {
                                        "description": "ID du logement à afficher",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "user_id": {
                                        "description": "ID de l'utilisateur, facultatif",
                                        "type": "integer",
                                        "example": 123
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Détails du logement récupérés avec succès",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Le logement spécifié n'existe pas",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Le logement spécifié n'existe pas"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logement/filterby/typehousing/{housingTypeId}": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des logements filtrée par type de logement",
                "description": "Récupère la liste des logements filtrée par le type de logement spécifié.",
                "operationId": "listingsFilteredByHousingType",
                "parameters": [
                    {
                        "name": "housingTypeId",
                        "in": "path",
                        "description": "ID du type de logement",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des logements filtrée",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Aucun logement trouvé pour le type spécifié"
                    }
                }
            }
        },
        "/api/logement/filterby/typeproperty/{PropertyTypeId}": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des logements filtrée par type de proprieté",
                "description": "Récupère la liste des logements filtrée par le type de propriété spécifié.",
                "operationId": "listingsFilteredByPropertyType",
                "parameters": [
                    {
                        "name": "PropertyTypeId",
                        "in": "path",
                        "description": "ID du type de propriété",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des logements filtrée",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Aucun logement trouvé pour le type spécifié"
                    }
                }
            }
        },
        "/api/logement/filterby/country/{country}": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des logements filtrée par Pays",
                "description": "Récupère la liste des logements filtrée par le paysspécifié.",
                "operationId": "579567a28bc3f4fe3efae14e21edfb56",
                "parameters": [
                    {
                        "name": "country",
                        "in": "path",
                        "description": "Nom du pays",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des logements filtrée par pays",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Aucun logement trouvé pour le type spécifié"
                    }
                }
            }
        },
        "/api/logement/filterby/preference/{preference_id}": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des logements filtrée par preference",
                "description": "Récupère la liste des logements filtrée par le id preference spécifié.",
                "operationId": "2fd925a4f8e746457b691e3a4fbcb686",
                "parameters": [
                    {
                        "name": "preference_id",
                        "in": "path",
                        "description": "Id du preference",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des logements filtrée par préférence",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Aucun logement trouvé pour le type spécifié"
                    }
                }
            }
        },
        "/api/logement/filterby/city/{city}": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des logements filtrée par ville",
                "description": "Récupère la liste des logements filtrée par villespécifié.",
                "operationId": "f668f23118bdd9677d89077e3a482231",
                "parameters": [
                    {
                        "name": "city",
                        "in": "path",
                        "description": "Nom de la ville",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des logements filtrée par ville",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Aucun logement trouvé pour le type spécifié"
                    }
                }
            }
        },
        "/api/logement/filterby/departement/{departement}": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des logements filtrée par departement",
                "description": "Récupère la liste des logements filtrée par departement spécifié.",
                "operationId": "30b5f67f65e20095eaac05ee38aadc2b",
                "parameters": [
                    {
                        "name": "departement",
                        "in": "path",
                        "description": "Nom du departement",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des logements filtrée par departement",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Aucun logement trouvé pour le type spécifié"
                    }
                }
            }
        },
        "/api/logement/filterby/nbtraveler/{nbtraveler}": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des logements filtrée par nbtraveler",
                "description": "Récupère la liste des logements filtrée par nbtraveler spécifié.",
                "operationId": "b0f705915753ba229938a707728688e9",
                "parameters": [
                    {
                        "name": "nbtraveler",
                        "in": "path",
                        "description": "Nombre de voyageur",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des logements filtrée par nbtraveler",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Aucun logement trouvé pour le type spécifié"
                    }
                }
            }
        },
        "/api/logement/filterby/nightpricemax/{price}": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des logements filtrée par prix de nuit(Maximum)",
                "description": "Récupère la liste des logements filtrée par un prix de nuit inférieur au montant spécifié.",
                "operationId": "c6874caca3903c645fa5b08386ef8a96",
                "parameters": [
                    {
                        "name": "price",
                        "in": "path",
                        "description": "Prix de nuit maximum",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des logements filtrée par prix de nuit",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Aucun logement trouvé pour le prix spécifié"
                    }
                }
            }
        },
        "/api/logement/filterby/nightpricemin/{price}": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des logements filtrée par prix de nuit (Minimum)",
                "description": "Récupère la liste des logements filtrée par un prix de nuit supérieur au montant spécifié.",
                "operationId": "0994d0b295cc90be26ba94c62df003ea",
                "parameters": [
                    {
                        "name": "price",
                        "in": "path",
                        "description": "Prix de nuit minimum",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des logements filtrés par prix de nuit",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Aucun logement trouvé pour le prix spécifié"
                    }
                }
            }
        },
        "/api/logement/filterby/hote/{UserID}": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des logements filtrée par user",
                "description": "Récupère la liste des logements pour un User donné.",
                "operationId": "64be7cf1593a8edebb8d86386524ef7f",
                "parameters": [
                    {
                        "name": "UserID",
                        "in": "path",
                        "description": "Id de User Hote",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des logements filtrée par Id User Hote",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Aucun logement trouvé pour le type spécifié"
                    }
                }
            }
        },
        "/api/logement/update/sensible/{id}": {
            "put": {
                "tags": [
                    "Housing"
                ],
                "summary": "Modifier les informations sensibles d'un logement",
                "description": "Permet de mettre à jour les informations sensibles d'un logement existant à partir de son ID",
                "operationId": "878ec1d3984676506778762965d95f77",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID du logement à mettre à jour",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "interior_regulation": {
                                        "type": "string"
                                    },
                                    "telephone": {
                                        "type": "string"
                                    },
                                    "code_pays": {
                                        "type": "string"
                                    },
                                    "arrived_independently": {
                                        "type": "integer"
                                    },
                                    "cancelation_condition": {
                                        "type": "string"
                                    },
                                    "departure_instruction": {
                                        "type": "string"
                                    },
                                    "surface": {
                                        "type": "number"
                                    },
                                    "price": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Les informations du logement ont été mises à jour avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Les informations du logement ont été mises à jour avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Le logement à mettre à jour n'existe pas",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Le logement à mettre à jour n'existe pas"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/update/insensible/{id}": {
            "put": {
                "tags": [
                    "Housing"
                ],
                "summary": "Modifier les informations insensibles d'un logement",
                "description": "Permet de modifier les informations insensibles d'un logement existant à partir de son ID",
                "operationId": "eee942cc5e923eabbf1211b008ec2285",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID du logement à mettre à jour",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "number_of_bed": {
                                        "type": "integer"
                                    },
                                    "number_of_traveller": {
                                        "type": "integer"
                                    },
                                    "is_camera": {
                                        "type": "integer"
                                    },
                                    "is_accepted_animal": {
                                        "type": "integer"
                                    },
                                    "is_animal_exist": {
                                        "type": "integer"
                                    },
                                    "is_instant_reservation": {
                                        "type": "integer"
                                    },
                                    "maximum_duration": {
                                        "type": "integer"
                                    },
                                    "minimum_duration": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Les informations du logement ont été mises à jour avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Les informations du logement ont été mises à jour avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Le logement à mettre à jour n'existe pas",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Le logement à mettre à jour n'existe pas"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/{housingId}/hote/disable": {
            "put": {
                "tags": [
                    "Housing"
                ],
                "summary": "route par laquelle l'hôte désactive son logement donné",
                "description": "Désactive un logement en fonction de son ID. Seul le propriétaire du logement peut le désactiver.",
                "operationId": "b8a3bfdd8469db8bb461f4c84884bdbe",
                "parameters": [
                    {
                        "name": "housingId",
                        "in": "path",
                        "description": "ID du logement à désactiver",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succès - Logement désactivé avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Le logement a été désactivé avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Erreur - Seul le propriétaire du logement peut le désactiver",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Seul le propriétaire du logement peut le désactiver"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Erreur - Logement non trouvé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Logement non trouvé"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/{housingId}/hote/enable": {
            "put": {
                "tags": [
                    "Housing"
                ],
                "summary": "la route qui permet à l'hôte d'activer un logement",
                "description": "Active un logement en fonction de son ID. Seul le propriétaire du logement peut l'activer.",
                "operationId": "7779ead7e4582ca27330f7086364d23a",
                "parameters": [
                    {
                        "name": "housingId",
                        "in": "path",
                        "description": "ID du logement à activer",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succès - Logement activé avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Le logement a été activé avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Erreur - Seul le propriétaire du logement peut l'activer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Seul le propriétaire du logement peut l'activer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Erreur - Logement non trouvé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Logement non trouvé"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/destroyHousingHote/{id}": {
            "delete": {
                "tags": [
                    "Housing"
                ],
                "summary": "Suppression d un logement par l' hote",
                "operationId": "eeaad0fda9213e9a8afa4b2d4244922a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the housing",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "housing deleted successfully"
                    },
                    "404": {
                        "description": "Housing not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/getHousingForHote": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des logements d'un hote connecté",
                "description": "Liste des logements d'un hote.C'est avec cette route qu'on affichera les logement pour un hote qui est connecté dans son dashboard",
                "operationId": "4cbe5e5e522f356573750af179f37161",
                "responses": {
                    "200": {
                        "description": "List of housing what be retrieve by hote"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/detail/getHousingStatisticAcceuil/{housing_id}": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste de quelques statistiques utiles pour le proprietaire d'un logement donné au niveau de detail logement sur le site",
                "description": "Liste de quelques statistiques utiles pour le proprietaire d'un logement donné au niveau de detail logement sur le site",
                "operationId": "cb4fb273476bf985ef97b122b663c20e",
                "parameters": [
                    {
                        "name": "housing_id",
                        "in": "path",
                        "description": "ID du logement à afficher",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste de quelques statistiques utiles pour le proprietaire d'un logement donné au niveau de detail logement sur le site",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Le logement spécifié n'existe pas",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Le logement spécifié n'existe pas"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logement/available_at_date": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des logements disponibles à une date donnée",
                "description": "Renvoie la liste des logements disponibles à une date donnée, en tenant compte du délai de 'time before reservation'.",
                "operationId": "728a1142bdb27654829af6075ea71977",
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date pour laquelle vérifier la disponibilité des logements (format: YYYY-MM-DD)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des logements disponibles à la date donnée",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Appartement Luxueux"
                                            },
                                            "address": {
                                                "type": "string",
                                                "example": "123 Rue de Paris"
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "Paris"
                                            },
                                            "country": {
                                                "type": "string",
                                                "example": "France"
                                            },
                                            "price": {
                                                "type": "number",
                                                "example": 120.5
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur de format de date",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Format de date invalide. Utilisez YYYY-MM-DD."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Aucune donnée trouvée",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Aucun logement trouvé pour la date donnée."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logement/add/file/{housingId}": {
            "post": {
                "tags": [
                    "Housing Photo"
                ],
                "summary": "Ajouter une ou plusieurs photos à un logement",
                "description": "Ajouter une ou plusieurs photos à un logement",
                "operationId": "0949b077a2b54df265c8c53fa3e9b10f",
                "parameters": [
                    {
                        "name": "housingId",
                        "in": "path",
                        "description": "ID du logement",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "photos[]"
                                ],
                                "properties": {
                                    "photos[]": {
                                        "type": "array",
                                        "items": {
                                            "description": "Image de la catégorie (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Photo(s) du logement ajoutée(s) avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Photo(s) du logement ajoutée(s) avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Erreur de validation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/photos/unverified": {
            "get": {
                "tags": [
                    "Housing Photo"
                ],
                "summary": "Obtenir la liste des photos des logements en attente de validation",
                "operationId": "68f77d41f780aee3808545ebf51f064f",
                "responses": {
                    "200": {
                        "description": "Liste des photos en attente de validation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "ID de la photo",
                                                "type": "integer"
                                            },
                                            "path": {
                                                "description": "Chemin de la photo",
                                                "type": "string"
                                            },
                                            "extension": {
                                                "description": "Extension de la photo",
                                                "type": "string"
                                            },
                                            "is_couverture": {
                                                "description": "Photo de couverture",
                                                "type": "boolean"
                                            },
                                            "housing_id": {
                                                "description": "ID du logement associé",
                                                "type": "integer"
                                            },
                                            "is_verified": {
                                                "description": "Statut de vérification",
                                                "type": "boolean"
                                            },
                                            "housing": {
                                                "description": "Détails du logement associé",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "owner": {
                                                        "description": "Propriétaire du logement",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Aucune photo en attente de validation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Aucune photo trouvée",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/photos/validate/{photoId}": {
            "put": {
                "tags": [
                    "Housing Photo"
                ],
                "summary": "Valider une photo du logement par son ID",
                "operationId": "d53c60384059f380ec75a2c5e0aa9e84",
                "parameters": [
                    {
                        "name": "photoId",
                        "in": "path",
                        "description": "ID de la photo à valider",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Photo validée avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "photo": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "path": {
                                                    "type": "string"
                                                },
                                                "is_verified": {
                                                    "type": "boolean"
                                                },
                                                "housing_id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Photo non trouvée",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/available_between_dates": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des logements disponibles entre un intervalle de dates",
                "description": "Renvoie la liste des logements disponibles entre deux dates, en tenant compte du délai de 'time before reservation'.",
                "operationId": "d76e3e988d1995a50dfdfc508e32f251",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Date de début pour vérifier la disponibilité des logements (format: YYYY-MM-DD)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Date de fin pour vérifier la disponibilité des logements (format: YYYY-MM-DD)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des logements disponibles entre les dates données",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Appartement Luxueux"
                                            },
                                            "address": {
                                                "type": "string",
                                                "example": "123 Rue de Paris"
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "Paris"
                                            },
                                            "country": {
                                                "type": "string",
                                                "example": "France"
                                            },
                                            "price": {
                                                "type": "number",
                                                "example": 120.5
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur de format de date",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Format de date invalide. Utilisez YYYY-MM-DD."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Aucun logement trouvé entre les dates données",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Aucun logement trouvé entre les dates données."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logement/liste/notFinished": {
            "get": {
                "tags": [
                    "Housing"
                ],
                "summary": "Liste des logements non rempli complètement par l'hôte connecté",
                "description": "Récupère la liste des logements des logements non rempli complètement par l'hôte connecté.",
                "operationId": "7851e5b98f330cf32a6c5cf03f53dc3d",
                "responses": {
                    "200": {
                        "description": "Liste des logements non rempli complètement par l'hôte connecté",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Liste des logements non rempli complètement par l'hôte connecté"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/{housingId}/equipements": {
            "get": {
                "tags": [
                    "Housing Equipment"
                ],
                "summary": "Récupérer les équipements associés à un logement donné",
                "description": "Récupère les équipements associés à un logement spécifié en fonction de housing_id.",
                "operationId": "d5b7230065ba0313bf7edda6ad8cf94d",
                "parameters": [
                    {
                        "name": "housingId",
                        "in": "path",
                        "description": "L'ID du Housingpour lequel récupérer les équipements",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succès - Les équipements associés au logement ont été récupérés avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "equipments": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id_housing": {
                                                        "description": "L'ID du logement",
                                                        "type": "integer"
                                                    },
                                                    "id_housing_equipment": {
                                                        "description": "L'ID de HousingEquipment",
                                                        "type": "integer"
                                                    },
                                                    "id_equipment": {
                                                        "description": "L'ID de l'équipement",
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "description": "Le nom de l'équipement",
                                                        "type": "string"
                                                    },
                                                    "is_verified": {
                                                        "description": "Indique si l'équipement est vérifié",
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Aucun logement trouvé avec l'ID spécifié"
                    },
                    "500": {
                        "description": "Erreur interne du serveur - Impossible de récupérer les équipements associés au logement"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/equipement": {
            "delete": {
                "tags": [
                    "Housing Equipment"
                ],
                "summary": "Supprime des équipements associés à un logement",
                "description": "Supprime l'association entre plusieurs équipements et un logement à partir des IDs des associations.",
                "operationId": "868a52769f48cd5f220b8d3433fa9566",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "housingEquipmentIds"
                                ],
                                "properties": {
                                    "housingEquipmentIds": {
                                        "description": "Tableau contenant les IDs des équipements du logement à supprimer",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Les équipements du logement ont été retirés avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Les équipements du logement ont été retirés avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/equipment/storeUnexist/{housingId}": {
            "post": {
                "tags": [
                    "Housing Equipment"
                ],
                "summary": "Create a new equipment what don't exist ",
                "operationId": "8367d48d369ccb22d94cbcbe4a387ffa",
                "parameters": [
                    {
                        "name": "housingId",
                        "in": "path",
                        "description": "ID of the housing ",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "climatiseur"
                                    },
                                    "category_id": {
                                        "type": "string",
                                        "example": "5"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Equipment  created successfully"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/equipment/addEquipmentToHousing": {
            "post": {
                "tags": [
                    "Housing Equipment"
                ],
                "summary": "ajouter des équipements existants à un logement donné ",
                "operationId": "fd7641ca9accf1fa3af2624dfa34d2a5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "housingId": {
                                        "type": "string",
                                        "example": "2"
                                    },
                                    "equipmentId": {
                                        "description": "Tableau contenant les IDs des équipements du logement à supprimer",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "categoryId": {
                                        "description": "Tableau contenant les IDs des categories des équipements du logement à supprimer",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Equipment  created successfully"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/equipment/ListHousingEquipmentInvalid/{housingId}": {
            "get": {
                "tags": [
                    "Housing Equipment"
                ],
                "summary": "Liste des associations équipements logement invalides ayant leur équipement qui existe déjà",
                "operationId": "283f86c2dbe38d83f867da11b0e18280",
                "parameters": [
                    {
                        "name": "housingId",
                        "in": "path",
                        "description": "ID of the housing",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of invalid housing equipment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "is_deleted": {
                                                        "type": "boolean"
                                                    },
                                                    "is_blocked": {
                                                        "type": "boolean"
                                                    },
                                                    "is_verified": {
                                                        "type": "boolean"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "icone": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Housing not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/equipment/makeVerifiedHousingEquipment/{housingEquipmentId}": {
            "post": {
                "tags": [
                    "Housing Equipment"
                ],
                "summary": "Valider une association équipement logement et dont l'équipement existe déjà",
                "operationId": "eb8fc015392ef72ae03d0e1ce47b562e",
                "parameters": [
                    {
                        "name": "housingEquipmentId",
                        "in": "path",
                        "description": "ID of the housing equipment association",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Housing equipment verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "association equipement logement vérifié avec succès."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Housing equipment not found"
                    },
                    "400": {
                        "description": "Housing equipment already verified"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/equipment/ListEquipmentForHousingInvalid/{housingId}": {
            "get": {
                "tags": [
                    "Housing Equipment"
                ],
                "summary": "Liste des équipements inexistants et invalides pour un logement donné",
                "operationId": "56c357e6222fd87be2e9ba96eef5a849",
                "parameters": [
                    {
                        "name": "housingId",
                        "in": "path",
                        "description": "ID of the housing",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of invalid equipment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Housing not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/equipment/getHousingEquipmentInvalid": {
            "get": {
                "tags": [
                    "Housing Equipment"
                ],
                "summary": "Liste des associations equipement logement invalides avec les équipements existant par défaut",
                "operationId": "961c6cdede3cdd8200d53fe66c97f06b",
                "responses": {
                    "200": {
                        "description": "Liste des associations equipement logement invalides avec les équipements existant par défaut",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Housing not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/equipment/getUnexistEquipmentInvalidForHousing": {
            "get": {
                "tags": [
                    "Housing Equipment"
                ],
                "summary": "Liste des équipements inexistants non valide",
                "operationId": "26f94b748273b980c8b0698708bab446",
                "responses": {
                    "200": {
                        "description": "Liste des équipements inexistants non valide",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Housing not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/{housingId}/preferences": {
            "get": {
                "tags": [
                    "Housing Preference"
                ],
                "summary": "Récupérer les préférences associées à un logement donné",
                "description": "Récupère les préférences associées à un logement spécifié en fonction de l'ID du logement.",
                "operationId": "1b2fb4154f3b2e0d93309ca349377066",
                "parameters": [
                    {
                        "name": "housingId",
                        "in": "path",
                        "description": "L'ID du logement pour lequel récupérer les préférences",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succès - Les préférences associées au logement ont été récupérées avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "preferences": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "L'ID de la préférence",
                                                        "type": "integer"
                                                    },
                                                    "preference_id": {
                                                        "description": "L'ID de la préférence de logement",
                                                        "type": "integer"
                                                    },
                                                    "preference_name": {
                                                        "description": "Le nom de la préférence de logement",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Aucun logement trouvé avec l'ID spécifié"
                    },
                    "500": {
                        "description": "Erreur interne du serveur - Impossible de récupérer les préférences associées au logement"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/preference": {
            "delete": {
                "tags": [
                    "Housing Preference"
                ],
                "summary": "Retirer des préférences associées à un logement",
                "description": "Supprime l'association entre plusieurs préférences et un logement à partir des IDs des associations.",
                "operationId": "28cd4fc57cb35b7f8db38633fe407549",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "housingPreferenceIds"
                                ],
                                "properties": {
                                    "housingPreferenceIds": {
                                        "description": "Tableau contenant les IDs des préférences du logement à supprimer",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Les préférences du logement ont été retirées avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Les préférences du logement ont été retirées avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Un ou plusieurs préférences du logement à retirer n'existent pas",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Un ou plusieurs préférences du logement à retirer n'existent pas"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/preference/storeUnexist/{housingId}": {
            "post": {
                "tags": [
                    "Housing Preference"
                ],
                "summary": "Create a new preference unexist",
                "operationId": "0f2d6dd1309cc73b87df8402052664ab",
                "parameters": [
                    {
                        "name": "housingId",
                        "in": "path",
                        "description": "ID of the housing",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "proche de la plage,etc"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Preference created successfully"
                    },
                    "404": {
                        "description": "Preference not found"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/preference/ListHousingPreferenceInvalid/{housingId}": {
            "get": {
                "tags": [
                    "Housing Preference"
                ],
                "summary": " Liste des associations  logement preference  invalide ayant leur préférence déjà existante",
                "operationId": "7a4feba63a3843661e5f78ce5bec68a6",
                "parameters": [
                    {
                        "name": "housingId",
                        "in": "path",
                        "description": "ID of the housing",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of invalid housing preference",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "is_deleted": {
                                                        "type": "boolean"
                                                    },
                                                    "is_blocked": {
                                                        "type": "boolean"
                                                    },
                                                    "is_verified": {
                                                        "type": "boolean"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "icone": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Housing not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/preference/addPreferenceToHousing": {
            "post": {
                "tags": [
                    "Housing Preference"
                ],
                "summary": "ajouter des préférences existantes à des logements",
                "operationId": "e13214300632a94015feef2d17617a53",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "housingId": {
                                        "type": "string",
                                        "example": "2"
                                    },
                                    "preferenceId": {
                                        "description": "Tableau contenant les IDs des préférences du logement à supprimer",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Preference  created successfully"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/preference/makeVerifiedHousingPreference/{housingPreferenceId}": {
            "post": {
                "tags": [
                    "Housing Preference"
                ],
                "summary": "Valider les associations logement préférence invalide  et ayant leur préférence qui existe déjà",
                "operationId": "a1218a7edfa62686770cec3dcbb3b575",
                "parameters": [
                    {
                        "name": "housingPreferenceId",
                        "in": "path",
                        "description": "ID of the housingPreference",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Housing preference verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "association equipement logement vérifié avec succès."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Housing preference not found"
                    },
                    "400": {
                        "description": "Housing preference already verified"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/preference/ListPreferenceForHousingInvalid/{housingId}": {
            "get": {
                "tags": [
                    "Housing Preference"
                ],
                "summary": "Liste des preferences inexistantes et  invalide pour un logement",
                "operationId": "6483adb7452df8a5e05a7a0d70d1b05c",
                "parameters": [
                    {
                        "name": "housingId",
                        "in": "path",
                        "description": "ID of the housing",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of invalid preferences",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Housing not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/preference/getHousingPreferenceInvalid": {
            "get": {
                "tags": [
                    "Housing Preference"
                ],
                "summary": "Liste des association préférence logement invalides ayant leur préférence qui existe déjà",
                "operationId": "4d6cdff7981bac8d9e792028843fbd21",
                "responses": {
                    "200": {
                        "description": "Liste des préférences logement invalides",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Housing not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/preference/getUnexistPreferenceInvalidForHousing": {
            "get": {
                "tags": [
                    "Housing Preference"
                ],
                "summary": "Liste des préférences inexistants non valide",
                "operationId": "43e5956354d11f3153fb30686e015cb7",
                "responses": {
                    "200": {
                        "description": "Liste des préférences inexistants non valide",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Housing not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/housingtype/index": {
            "get": {
                "tags": [
                    "HousingType"
                ],
                "summary": "Get all housing types no block",
                "operationId": "946d94a40b9e6e84b80bc50094cf6668",
                "responses": {
                    "200": {
                        "description": "List of housing types"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/housingtype/indexBlock": {
            "get": {
                "tags": [
                    "HousingType"
                ],
                "summary": "Get all housing types block",
                "operationId": "49211936db885b040c8f569b0dccdbb9",
                "responses": {
                    "200": {
                        "description": "List of housing types"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/housingtype/store": {
            "post": {
                "tags": [
                    "HousingType"
                ],
                "summary": "Create a new housingtype ",
                "operationId": "2698fa2d819cb26f9847d7824179cfc1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "chambre partagé"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "cadre accueillant ... "
                                    },
                                    "icone": {
                                        "description": "Image de profil d'identité (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Housingtype  created successfully"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/housingtype/show/{id}": {
            "get": {
                "tags": [
                    "HousingType"
                ],
                "summary": "Get a specific housing type by ID",
                "operationId": "b2fdd04719224cc97e421556b3cb9ef7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the housing type",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Housing type details"
                    },
                    "404": {
                        "description": "Housing type not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/housingtype/update/{id}": {
            "put": {
                "tags": [
                    "HousingType"
                ],
                "summary": "Update a housing type by ID",
                "operationId": "d0fa187bb03fe1e58a22dd26134abb06",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the housing type",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Apartment"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Spacious apartment in the city center"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Housing type updated successfully"
                    },
                    "404": {
                        "description": "Housing type not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/housingtype/updateIcone/{id}": {
            "post": {
                "tags": [
                    "HousingType"
                ],
                "summary": "Update an housingtype icone by ID",
                "operationId": "74a783214bbdbd0b6ff6fb19dbc943c7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the housingType to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "icone": {
                                        "description": "Image de profil d'identité (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "HousingType updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "HousingType updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "HousingType not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "HousingType not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/housingtype/destroy/{id}": {
            "delete": {
                "tags": [
                    "HousingType"
                ],
                "summary": "Delete a housing type by ID",
                "operationId": "5af44185e998849ed6a8cc7b2cc00141",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the housing type",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Housing type deleted successfully"
                    },
                    "404": {
                        "description": "Housing type not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/housingtype/block/{id}": {
            "put": {
                "tags": [
                    "HousingType"
                ],
                "summary": "Block a housing type",
                "operationId": "91e33e1a3442a696f442360041c1864a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the housing type to block",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HousingType successfully blocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "HousingType successfully blocked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "HousingType not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "HousingType not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/housingtype/unblock/{id}": {
            "put": {
                "tags": [
                    "HousingType"
                ],
                "summary": "Unblock a housing type",
                "operationId": "600964ca603526e3646882126b21411f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the housing type to unblock",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "HousingType successfully unblocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "HousingType successfully unblocked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "HousingType not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "HousingType not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/register": {
            "post": {
                "tags": [
                    "Inscription"
                ],
                "summary": "Enregistrer un nouvel utilisateur",
                "description": "Enregistre un nouvel utilisateur avec les informations fournies",
                "operationId": "d62a46aefee7c5921c98e5ddb6164436",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "nom": {
                                        "description": "Nom de l'utilisateur",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "prenom": {
                                        "description": "Prénom de l'utilisateur",
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "password": {
                                        "description": "Mot de passe (min : 8 caractères, une majuscule, un chiffre, un caractère spécial)",
                                        "type": "string",
                                        "format": "password",
                                        "example": "Bagdadi2000!"
                                    },
                                    "code_pays": {
                                        "description": "Code du pays",
                                        "type": "string",
                                        "example": "FR"
                                    },
                                    "telephone": {
                                        "description": "Numéro de téléphone",
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "email": {
                                        "description": "Adresse e-mail de l'utilisateur",
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@gmail.com"
                                    },
                                    "pays": {
                                        "description": "Pays de l'utilisateur",
                                        "type": "string",
                                        "example": "France"
                                    },
                                    "identity_profil": {
                                        "description": "Image de profil d'identité (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                        "type": "file",
                                        "format": "binary"
                                    },
                                    "ville": {
                                        "description": "Ville de l'utilisateur",
                                        "type": "string",
                                        "example": "Paris"
                                    },
                                    "addresse": {
                                        "description": "Adresse de l'utilisateur",
                                        "type": "string",
                                        "example": "123 Rue de la Paix"
                                    },
                                    "sexe": {
                                        "description": "Sexe de l'utilisateur",
                                        "type": "string",
                                        "example": "Masculin"
                                    },
                                    "postal_code": {
                                        "description": "Code postal de l'utilisateur",
                                        "type": "string",
                                        "example": "75001"
                                    },
                                    "language_id[]": {
                                        "type": "array",
                                        "items": {
                                            "description": "ID de la langue préférée de l'utilisateur",
                                            "type": "integer"
                                        }
                                    },
                                    "password_confirmation": {
                                        "description": "Confirmation du mot de passe (doit correspondre au mot de passe)",
                                        "type": "string",
                                        "format": "password",
                                        "example": "Bagdadi2000!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Utilisateur enregistré avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Utilisateur enregistré avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur de validation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/language/index": {
            "get": {
                "tags": [
                    "Language"
                ],
                "summary": "Get all languages",
                "operationId": "349daf3fb13565f7bfa4d123f0dc6207",
                "responses": {
                    "200": {
                        "description": "List of languages"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/language/store": {
            "post": {
                "tags": [
                    "Language"
                ],
                "summary": "Create a new language ",
                "operationId": "1b4a62d317c7ac00f8e27096f72b7bb9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Allemand , Mandarin"
                                    },
                                    "icone": {
                                        "description": "Image de profil d'identité (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Language  created successfully"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/language/show/{id}": {
            "get": {
                "tags": [
                    "Language"
                ],
                "summary": "Get a specific language by ID",
                "operationId": "f2debe92801639202636dc05b019dd32",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the language",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Language details"
                    },
                    "404": {
                        "description": "Language not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/language/updateName/{id}": {
            "put": {
                "tags": [
                    "Language"
                ],
                "summary": "Update a language by ID",
                "operationId": "da404e88f9fd7ede9b4e36e613aba528",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the language",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "français,anglais,etc"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Language updated successfully"
                    },
                    "404": {
                        "description": "Language not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/language/updateIcone/{id}": {
            "post": {
                "tags": [
                    "Language"
                ],
                "summary": "Update a language icone by ID",
                "operationId": "dfd6340686acc723c5b512405eff091a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the language to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "icone": {
                                        "description": "Image de profil d'identité (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Language updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Language updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Language not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Language not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/language/destroy/{id}": {
            "delete": {
                "tags": [
                    "Language"
                ],
                "summary": "Delete a language by ID",
                "operationId": "dc9e1c6696c4a3f770c4100a29c65ff8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the language",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Language deleted successfully"
                    },
                    "404": {
                        "description": "Language not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/language/block/{id}": {
            "put": {
                "tags": [
                    "Language"
                ],
                "summary": "Block a language",
                "operationId": "03bd2fdb84b60de0c8be19a90e08e05b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the language to block",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Language successfully blocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Language successfully blocked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Language not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Language not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/language/unblock/{id}": {
            "put": {
                "tags": [
                    "Language"
                ],
                "summary": "Unblock a language",
                "operationId": "fe1475a32fdcfb90de3d4719985faa4c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the language to unblock",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Language successfully unblocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Language successfully unblocked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Language not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Language not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "make authentification",
                "operationId": "af8d52eaca6894116132c882b4499ae9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "a@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "P@$$w0rd"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": " connected successfully"
                    },
                    "200": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Check authentication status",
                "description": "Check if the user is authenticated and retrieve user data and role",
                "operationId": "2321de506ac21b60207081c4bf25ed27",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        },
                                        "role": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/verification_code": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Vérification du code de vérification",
                "description": "Vérifie le code de vérification envoyé par l'utilisateur.",
                "operationId": "4e6923e02b38b0c62afd10fa2cbfe41b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "description": "Le code de vérification à vérifier."
                                    }
                                },
                                "required": "code"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Échec de la vérification",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "description": "Le code d'état de la réponse.",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Le message indiquant que la vérification a échoué.",
                                            "type": "string",
                                            "example": "Check failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "description": "Le code d'état de la réponse.",
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "description": "Le message d'erreur détaillé.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Réponse par défaut pour les autres cas",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "description": "Le code d'état de la réponse.",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Le message indiquant que la vérification a réussi.",
                                            "type": "string",
                                            "example": "Verification passed"
                                        },
                                        "verification": {
                                            "description": "Le code de vérification vérifié.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/new_code/{id}": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Generate a new code for user",
                "operationId": "f6c0024eea787581682399c170203f27",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Code sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Code sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "This id does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "This id does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/password_recovery_start_step": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Start password recovery process",
                "operationId": "63bd36eafce9060edecc8c8e34c9af01",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Email not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/password_recovery_end_step": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "End password recovery process",
                "operationId": "135f5b80cf07e3ec83bf2d816b83e7ae",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "User's email address",
                                        "type": "string",
                                        "example": "user@example.com"
                                    },
                                    "new_password": {
                                        "description": "New password for the user",
                                        "type": "string",
                                        "example": "new_password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password changed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Email not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/logout": {
            "post": {
                "tags": [
                    "Deconnexion"
                ],
                "summary": "Logout the user",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You are disconnected"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/methodPayement/index": {
            "get": {
                "tags": [
                    "MethodPayement"
                ],
                "summary": "Get all methodPayements",
                "operationId": "141c9b0353861998c05b273b9b45f5c2",
                "responses": {
                    "200": {
                        "description": "List of methodPayements"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/methodPayement/store": {
            "post": {
                "tags": [
                    "MethodPayement"
                ],
                "summary": "Create a new methodPayement ",
                "operationId": "341e71deff68429d8da69e85959c3eeb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "flooz , momo"
                                    },
                                    "icone": {
                                        "description": "Image de profil d'identité (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "MethodPayement  created successfully"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/methodPayement/show/{id}": {
            "get": {
                "tags": [
                    "MethodPayement"
                ],
                "summary": "Get a specific methodPayement by ID",
                "operationId": "1e280076ef509323ae68af9ceb0d6c0c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the methodPayement",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MethodPayement details"
                    },
                    "404": {
                        "description": "MethodPayement not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/methodPayement/updateName/{id}": {
            "put": {
                "tags": [
                    "MethodPayement"
                ],
                "summary": "Update a methodPayement name by ID",
                "operationId": "5438932189853426632912b9e0823c4c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the methodPayement",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "français,anglais,etc"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "MethodPayement updated successfully"
                    },
                    "404": {
                        "description": "MethodPayement not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/methodPayement/updateIcone/{id}": {
            "post": {
                "tags": [
                    "MethodPayement"
                ],
                "summary": "Update a methodPayement icone by ID",
                "operationId": "b355f65e68bc5a4779088b3fade13ae7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the methodPayement to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "icone": {
                                        "description": "Image de profil d'identité (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "MethodPayement updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "MethodPayement updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "MethodPayement not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "MethodPayement not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/methodPayement/destroy/{id}": {
            "delete": {
                "tags": [
                    "MethodPayement"
                ],
                "summary": "Delete a methodPayement by ID",
                "operationId": "3145dd9b619184359319b6eda81e807e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the methodPayement",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "MethodPayement deleted successfully"
                    },
                    "404": {
                        "description": "MethodPayement not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/moyenPayement/ListeMoyenPayement": {
            "get": {
                "tags": [
                    "MoyenPayement"
                ],
                "summary": "liste de de tous les moyens de payements non bloqué et non supprimé",
                "operationId": "58333b95af0b05e85bc05b77d188f23a",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/moyenPayement/ListeMoyenPayementUserAuth": {
            "get": {
                "tags": [
                    "MoyenPayement"
                ],
                "summary": "Liste des moyens de paiement de l'utilisateur authentifié",
                "description": "Cette fonction permet de récupérer la liste des moyens de paiement de l'utilisateur authentifié.",
                "operationId": "bd61b29ab2eb97dba1d31db7040778ce",
                "responses": {
                    "200": {
                        "description": "Liste des moyens de paiement récupérée avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Message d'erreur spécifique"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/moyenPayement/ListeMoyenPayementBlocked": {
            "get": {
                "tags": [
                    "MoyenPayement"
                ],
                "summary": "Liste des moyens de payements bloqué",
                "operationId": "4be2dba061b45534fc2d250832ed5028",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/moyenPayement/ListeMoyenPayementDeleted": {
            "get": {
                "tags": [
                    "MoyenPayement"
                ],
                "summary": "Liste des moyens de paiement supprimés",
                "description": "Récupère la liste des moyens de paiement qui ont été supprimés mais non bloqués.",
                "operationId": "ListeMoyenPayementDeleted",
                "responses": {
                    "200": {
                        "description": "Liste des moyens de paiement supprimés récupérée avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Message d'erreur spécifique"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/moyenPayement/store": {
            "post": {
                "tags": [
                    "MoyenPayement"
                ],
                "summary": "Enregistrer un nouveau moyen de paiement",
                "description": "Cette fonction permet à un utilisateur d'enregistrer un nouveau moyen de paiement.",
                "operationId": "storeMoyenPayement",
                "requestBody": {
                    "description": "Données du nouveau moyen de paiement",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "method_payement_id",
                                    "valeur_method_payement"
                                ],
                                "properties": {
                                    "method_payement_id": {
                                        "description": "ID du moyen de paiement",
                                        "type": "integer"
                                    },
                                    "valeur_method_payement": {
                                        "description": "Valeur du moyen de paiement",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Nouveau moyen de paiement enregistré avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Moyen de paiement enregistré avec succès"
                                        },
                                        "moyen_paiement": {}
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur de validation des données",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Message d'erreur spécifique"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Message d'erreur spécifique"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/moyenPayement/show/{idMoyenPayement}": {
            "get": {
                "tags": [
                    "MoyenPayement"
                ],
                "summary": "Afficher les détails d'un moyen de paiement",
                "description": "Cette fonction permet à un utilisateur d'afficher les détails d'un moyen de paiement spécifique.",
                "operationId": "showMoyenPayement",
                "parameters": [
                    {
                        "name": "idMoyenPayement",
                        "in": "path",
                        "description": "ID du moyen de paiement à afficher",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Détails du moyen de paiement récupérés avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {}
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Moyen de paiement non trouvé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Moyen de paiement non trouvé"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Message d'erreur spécifique"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/moyenPayement/update/{idMoyenPayement}": {
            "put": {
                "tags": [
                    "MoyenPayement"
                ],
                "summary": "Modification des moyens de payement",
                "description": "Mettre à jour un moyen de paiement existant.",
                "operationId": "f64c1939d649e2b707546acd60c572c2",
                "parameters": [
                    {
                        "name": "idMoyenPayement",
                        "in": "path",
                        "description": "ID du moyen de paiement à mettre à jour",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Nouvelles données du moyen de paiement",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "method_payement_id",
                                    "valeur_method_payement"
                                ],
                                "properties": {
                                    "method_payement_id": {
                                        "description": "ID de la méthode de paiement",
                                        "type": "integer"
                                    },
                                    "valeur_method_payement": {
                                        "description": "Valeur du moyen de paiement",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Moyen de paiement mis à jour avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Moyen de paiement mis à jour avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Moyen de paiement non trouvé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Moyen de paiement non trouvé"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Message d'erreur spécifique"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/moyenPayement/destroy/{idMoyenPayement}": {
            "delete": {
                "tags": [
                    "MoyenPayement"
                ],
                "summary": "Supprimer un moyen de paiement",
                "description": "Cette fonction permet à un utilisateur de supprimer un moyen de paiement spécifique.",
                "operationId": "deleteMoyenPayement",
                "parameters": [
                    {
                        "name": "idMoyenPayement",
                        "in": "path",
                        "description": "ID du moyen de paiement à supprimer",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Moyen de paiement supprimé avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Moyen de paiement supprimé avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Moyen de paiement non trouvé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Moyen de paiement non trouvé"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Message d'erreur spécifique"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/moyenPayement/block/{idMoyenPayement}": {
            "put": {
                "tags": [
                    "MoyenPayement"
                ],
                "summary": "Bloquer un moyen de paiement",
                "description": "Cette fonction permet de bloquer un moyen de paiement.",
                "operationId": "8d194e3f2b0b6c8f6b9269f1b8e0dd96",
                "parameters": [
                    {
                        "name": "idMoyenPayement",
                        "in": "path",
                        "description": "ID du moyen de paiement à bloquer",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Moyen de paiement bloqué avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Moyen de paiement bloqué avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Moyen de paiement non trouvé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Moyen de paiement non trouvé"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Message d'erreur spécifique"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/moyenPayement/unblock/{idMoyenPayement}": {
            "put": {
                "tags": [
                    "MoyenPayement"
                ],
                "summary": "Débloquer un moyen de paiement",
                "description": "Cette fonction permet de débloquer un moyen de paiement.",
                "operationId": "155ae73396969a723cd3bd99a7a850bf",
                "parameters": [
                    {
                        "name": "idMoyenPayement",
                        "in": "path",
                        "description": "ID du moyen de paiement à débloquer",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Moyen de paiement débloqué avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Moyen de paiement débloqué avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Moyen de paiement non trouvé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Moyen de paiement non trouvé"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Message d'erreur spécifique"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/notifications/index": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "summary": "Get all notification in the site",
                "operationId": "35983e8c29c4df4b1df3cc642a98dbad",
                "responses": {
                    "200": {
                        "description": "List of the notification"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/notifications/store": {
            "post": {
                "tags": [
                    "Notification"
                ],
                "summary": "Ajouter une notification à un utilisateur,ce dernier verra dans sa liste de notification une fois connecté",
                "operationId": "c2aed4b34d3adeaa74c32156265397d8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "name"
                                ],
                                "properties": {
                                    "user_id": {
                                        "description": "ID de l'utilisateur",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "name": {
                                        "description": "Nom de la notification",
                                        "type": "string",
                                        "example": "Notification Example"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Notification ajoutée avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Notification 'Notification Example' ajoutée à l'utilisateur 'John Doe' avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur de validation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/notifications/users": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "summary": "Récupérer la liste de notifications pour un utilisateur connecté",
                "operationId": "3837af30e379118ab3830607350739c6",
                "responses": {
                    "200": {
                        "description": "Liste des notifications avec succès pour l'utilisateur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/notifications/unread": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "summary": "Obtenir les notifications non lues pour un utilisateur connecté",
                "operationId": "cbc72457bde618b8a2059580ea992e1c",
                "responses": {
                    "200": {
                        "description": "Notifications non lues pour l'utilisateur connecté",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "unread_notifications": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Nouvelle notification"
                                                    },
                                                    "is_read": {
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-12-01T10:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Utilisateur non connecté",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Utilisateur non connecté."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/notifications/read": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "summary": "Obtenir les notifications lues pour un utilisateur connecté",
                "operationId": "1fc1d75ed3da08cca17395eab537a6f1",
                "responses": {
                    "200": {
                        "description": "Notifications lues pour l'utilisateur connecté",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "read_notifications": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "is_read": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Utilisateur non connecté",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Utilisateur non connecté."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/notifications/{id}/markread": {
            "put": {
                "tags": [
                    "Notification"
                ],
                "summary": "Marquer une notification comme lue",
                "operationId": "b14e37bf0323e01004e37eef00a90313",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de la notification à marquer comme lue",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification marquée comme lue",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Notification marquée comme lue."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Notification non trouvée",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Notification non trouvée."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Notification déjà lue",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Notification déjà lue."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/paiement/reservation/user": {
            "get": {
                "tags": [
                    "Paiement"
                ],
                "summary": "Liste des paiements éffectués par le voyageur lors des reservations",
                "description": "Liste des paiements éffectués par le voyageur lors des reservations.",
                "operationId": "662319232b772e2d94de8e51010b8296",
                "responses": {
                    "200": {
                        "description": "Liste des paiements éffectués par le voyageur lors des reservations",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Aucune réservation trouvée pour cet utilisateur"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/paiement/reservation/all": {
            "get": {
                "tags": [
                    "Paiement"
                ],
                "summary": "Liste des paiements éffectués sur le site lors des reservations",
                "description": "Liste des paiements éffectués sur le site lors des reservations.",
                "operationId": "4359353960f64ea0b8a5a99bf8cced4d",
                "responses": {
                    "200": {
                        "description": "Liste des paiements éffectués sur le site lors des reservations",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Aucun paiement effectué sur le site"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/permission/index": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get all permissions",
                "operationId": "2306a1f461cca99b72b7b4de8fa9ac21",
                "responses": {
                    "200": {
                        "description": "List of permissions"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/permission/store": {
            "post": {
                "tags": [
                    "Permission"
                ],
                "summary": "Create a new permission ",
                "operationId": "aaa9a1489978d8237d358f1010932130",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "create"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permission  created successfully"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/permission/show/{id}": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get a specific permission by ID",
                "operationId": "1cae0ef6ddb328b988765a8129134b9d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the permission",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission details"
                    },
                    "404": {
                        "description": "Permission not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/permission/update/{id}": {
            "put": {
                "tags": [
                    "Permission"
                ],
                "summary": "Update a permission by ID",
                "operationId": "10621bd1d3510464e7a1e4e7e3c77dfe",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the permission",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "permission_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "create"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permission updated successfully"
                    },
                    "404": {
                        "description": "Permission not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/permission/destroy/{id}": {
            "delete": {
                "tags": [
                    "Permission"
                ],
                "summary": "Delete a permission by ID",
                "operationId": "1d26711ac0e6cd7a1fe89efc131e7404",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the permission",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Permission deleted successfully"
                    },
                    "404": {
                        "description": "Permission not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/updatephoto/{photo_id}": {
            "post": {
                "tags": [
                    "Housing Photo"
                ],
                "summary": "Mettre à jour la photo d'un logement",
                "description": "Permet à l'hôte de mettre à jour une photo de logement en téléchargeant une nouvelle image",
                "operationId": "844fe0df9fa205c42aa848f83e1d49aa",
                "parameters": [
                    {
                        "name": "photo_id",
                        "in": "path",
                        "description": "ID de la photo à mettre à jour",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "photo"
                                ],
                                "properties": {
                                    "photo": {
                                        "description": "Nouvelle photo de profil de l'utilisateur (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Photo de logement mise à jour avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Photo de logement mise à jour avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur de validation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/{housingId}/setcoverphoto/{photoId}": {
            "post": {
                "tags": [
                    "Housing Photo"
                ],
                "summary": "Définir une nouvelle photo comme couverture d'un logement",
                "description": "Permet à l'utilisateur de définir une nouvelle photo comme couverture pour un logement donné.",
                "operationId": "dcbad0fda77a24739c043164752503ec",
                "parameters": [
                    {
                        "name": "housingId",
                        "in": "path",
                        "description": "ID du logement",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "photoId",
                        "in": "path",
                        "description": "ID de la nouvelle photo",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "La nouvelle photo de couverture a été définie avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "La nouvelle photo de couverture a été définie avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Le logement ou la photo spécifiée n'existe pas",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Le logement ou la photo spécifiée n'existe pas"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Une erreur s'est produite lors de la définition de la nouvelle photo de couverture"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/photo/{photoid}": {
            "delete": {
                "tags": [
                    "Housing Photo"
                ],
                "summary": "Supprimer une photo d'un logement",
                "description": "Supprime une photo d'un logement.",
                "operationId": "87cdbf9cc0055175cea79ed7ae92f154",
                "parameters": [
                    {
                        "name": "photoid",
                        "in": "path",
                        "description": "ID de la photo à supprimer",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "La photo a été supprimée avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "La photo a été supprimée avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "La photo est actuellement utilisée comme photo de couverture et ne peut pas être supprimée",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "La photo est actuellement utilisée comme photo de couverture et ne peut pas être supprimée."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Photo non trouvée",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Photo non trouvée"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Une erreur s'est produite lors de la suppression de la photo."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/portefeuille/credit": {
            "post": {
                "tags": [
                    "Portefeuille"
                ],
                "summary": "Créditer le portefeuille d'un utilisateur",
                "description": "Crédite le portefeuille d'un utilisateur avec un certain montant et enregistre la transaction. Un utilisateur doit être authentifié pour utiliser cet endpoint.",
                "operationId": "0845092f347e1a6ea051568b61a1796f",
                "requestBody": {
                    "description": "Données nécessaires pour créditer le portefeuille",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount",
                                    "paiement_methode",
                                    "transaction_id"
                                ],
                                "properties": {
                                    "amount": {
                                        "description": "Le montant à créditer",
                                        "type": "number",
                                        "format": "double",
                                        "example": 100
                                    },
                                    "paiement_methode": {
                                        "description": "Méthode de paiement utilisée",
                                        "type": "string",
                                        "example": "carte"
                                    },
                                    "transaction_id": {
                                        "description": "ID de transaction unique",
                                        "type": "string",
                                        "example": "12345-abcde"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Le portefeuille a été crédité avec succès.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message de succès",
                                            "type": "string",
                                            "example": "Le portefeuille a été crédité avec succès."
                                        },
                                        "solde": {
                                            "description": "Solde actuel du portefeuille",
                                            "type": "number",
                                            "format": "double"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Données de requête invalides.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message d'erreur",
                                            "type": "string",
                                            "example": "Données de requête invalides."
                                        },
                                        "errors": {
                                            "description": "Détails des erreurs",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Portefeuille non trouvé.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message d'erreur",
                                            "type": "string",
                                            "example": "Portefeuille non trouvé pour cet utilisateur."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Utilisateur non authentifié.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message d'erreur",
                                            "type": "string",
                                            "example": "Utilisateur non authentifié."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/portefeuille/user/transaction": {
            "get": {
                "tags": [
                    "Portefeuille"
                ],
                "summary": "Obtenir les détails du portefeuille d'un utilisateur(Liste des transactions éffectuées par l'utilisateur sur le site)",
                "description": "Retourne le solde du portefeuille de l'utilisateur connecté et la liste des transactions associées.",
                "operationId": "e984afd337a349cedbae8baec60bae14",
                "responses": {
                    "200": {
                        "description": "Détails du portefeuille retournés avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "solde": {
                                            "description": "Solde actuel du portefeuille",
                                            "type": "number"
                                        },
                                        "transactions": {
                                            "description": "Liste des transactions associées au portefeuille",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "debit": {
                                                        "description": "Indique si la transaction est un débit",
                                                        "type": "boolean"
                                                    },
                                                    "credit": {
                                                        "description": "Indique si la transaction est un crédit",
                                                        "type": "boolean"
                                                    },
                                                    "amount": {
                                                        "description": "Montant de la transaction",
                                                        "type": "number"
                                                    },
                                                    "motif": {
                                                        "description": "Motif de la transaction",
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "description": "Date de création de la transaction",
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Portefeuille non trouvé pour cet utilisateur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message d'erreur",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/portefeuille/transaction/all": {
            "get": {
                "tags": [
                    "Portefeuille"
                ],
                "summary": "Voir toutes les transactions éffectué sur le site (Admin)",
                "operationId": "a834e8ec09f88df3112d746515bc3b37",
                "responses": {
                    "200": {
                        "description": "Liste de toutes les transactions éffectuées sur le site"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/preference/VerifiednotBlocknotDelete": {
            "get": {
                "tags": [
                    "Preference"
                ],
                "summary": "Get all preferences (verified, not blocked, not deleted)",
                "operationId": "47b543fe6e93580a5ff50cff9fe6b918",
                "responses": {
                    "200": {
                        "description": "List of preferences"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/preference/VerifiedBlocknotDelete": {
            "get": {
                "tags": [
                    "Preference"
                ],
                "summary": "Get all preferences (verified, blocked, not deleted)",
                "operationId": "8d460add6b5f15017743d11ccd62c226",
                "responses": {
                    "200": {
                        "description": "List of preferences"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/preference/VerifiednotBlockDelete": {
            "get": {
                "tags": [
                    "Preference"
                ],
                "summary": "Get all preferences (verified, not blocked,  deleted)",
                "operationId": "1174563d5d5c4412dd95918b111ca61d",
                "responses": {
                    "200": {
                        "description": "List of preferences"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/preference/indexUnverified": {
            "get": {
                "tags": [
                    "Preference"
                ],
                "summary": "Get all preferences unverified",
                "operationId": "c8a878b29c90a1e9faa203edc554829c",
                "responses": {
                    "200": {
                        "description": "List of preferences"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/preference/store": {
            "post": {
                "tags": [
                    "Preference"
                ],
                "summary": "Create a new preference ",
                "operationId": "36602e70506545ecf9a1b6a472057ae5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "salle de jeux"
                                    },
                                    "icone": {
                                        "description": "Image de profil d'identité (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Preference  created successfully"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/preference/show/{id}": {
            "get": {
                "tags": [
                    "Preference"
                ],
                "summary": "Get a specific preference by ID",
                "operationId": "04325ef38b6612cde0dc14d848dd218e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the preference",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Preference details"
                    },
                    "404": {
                        "description": "Preference not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/preference/updateName/{id}": {
            "put": {
                "tags": [
                    "Preference"
                ],
                "summary": "Update a preference by ID",
                "operationId": "a9a0958914560406a8293010e6ab0102",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the preference",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "preference1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Preference updated successfully"
                    },
                    "404": {
                        "description": "Preference not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/preference/updateIcone/{id}": {
            "post": {
                "tags": [
                    "Preference"
                ],
                "summary": "Update an preference icone by ID",
                "operationId": "6b5f756bfb00ca1b7a85661a0a1d7c0d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the preference to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "icone": {
                                        "description": "Image de profil d'identité (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Preference updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Preference updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Preference not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Preference not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/preference/destroy/{id}": {
            "delete": {
                "tags": [
                    "Preference"
                ],
                "summary": "Delete a preference by ID",
                "operationId": "7e2a68afe4d0b547c601947d412d8d70",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the preference",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Preference deleted successfully"
                    },
                    "404": {
                        "description": "Preference not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/preference/block/{id}": {
            "put": {
                "tags": [
                    "Preference"
                ],
                "summary": "Block a preference",
                "operationId": "03cc5dc3e29819c93c1ccc3d2299f84b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the preference to block",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Preference successfully blocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Preference successfully blocked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Preference not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Preference not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/preference/unblock/{id}": {
            "put": {
                "tags": [
                    "Preference"
                ],
                "summary": "Unblock a preference",
                "operationId": "4686ec2fd52a9db99b3ede5ce9f20495",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the preference to unblock",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Preference successfully unblocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Preference successfully unblocked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Preference not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Preference not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/preference/makeVerified/{id}": {
            "put": {
                "tags": [
                    "Preference"
                ],
                "summary": "make verified an preference",
                "operationId": "4c9605e94300e0c5d3630b8cb3069627",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the preference to verified",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Preference successfully verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Preference successfully verified"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Preference not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Preference not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/promotion/add": {
            "post": {
                "tags": [
                    "Promotion"
                ],
                "summary": "Ajouter une nouvelle promotion",
                "operationId": "484877ccac081ba9952ebe7eaf5a3b76",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "housing_id",
                                    "number_of_reservation",
                                    "value",
                                    "date_debut",
                                    "date_fin"
                                ],
                                "properties": {
                                    "housing_id": {
                                        "description": "ID du logement",
                                        "type": "integer"
                                    },
                                    "number_of_reservation": {
                                        "description": "Nombre de réservations",
                                        "type": "integer"
                                    },
                                    "value": {
                                        "description": "Valeur de la promotion",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "date_debut": {
                                        "description": "Date de début de la promotion",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "date_fin": {
                                        "description": "Date de fin de la promotion",
                                        "type": "string",
                                        "format": "date"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Promotion ajoutée avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Promotion ajoutée avec succès."
                                        },
                                        "promotion": {
                                            "properties": {
                                                "housing_id": {
                                                    "type": "integer"
                                                },
                                                "number_of_reservation": {
                                                    "type": "integer"
                                                },
                                                "value": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "is_encours": {
                                                    "type": "boolean"
                                                },
                                                "date_debut": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "date_fin": {
                                                    "type": "string",
                                                    "format": "date"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Promotion en cours",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Ce logement a déjà une promotion en cours."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Données non valides",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "properties": {
                                                "housing_id": {
                                                    "type": "string",
                                                    "example": "Le logement est requis."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/promotion/user": {
            "get": {
                "tags": [
                    "Promotion"
                ],
                "summary": "Obtenir les promotions d'un utilisateur connecté(Dashboard hote)",
                "operationId": "61ea1ab39e88b4a8c868f9a3aad5e5e2",
                "responses": {
                    "200": {
                        "description": "Promotions associées à l'utilisateur qui est connecté actuellement",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "housing_id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "number_of_reservation": {
                                                        "type": "integer",
                                                        "example": 10
                                                    },
                                                    "value": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 15.5
                                                    },
                                                    "is_encours": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "date_debut": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2024-01-01"
                                                    },
                                                    "date_fin": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2024-01-31"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Utilisateur non connecté",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Utilisateur non connecté."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/promotion/housing/{housingId}": {
            "get": {
                "tags": [
                    "Promotion"
                ],
                "summary": "Obtenir toutes les promotions d'un logement donné",
                "operationId": "5def71c386ad0cdd645ff053124afc15",
                "parameters": [
                    {
                        "name": "housingId",
                        "in": "path",
                        "description": "ID du logement",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Toutes les promotions associées au logement",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "housing_id": {
                                                        "type": "integer"
                                                    },
                                                    "number_of_reservation": {
                                                        "type": "integer"
                                                    },
                                                    "value": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "is_encours": {
                                                        "type": "boolean"
                                                    },
                                                    "date_debut": {
                                                        "type": "string",
                                                        "format": "date"
                                                    },
                                                    "date_fin": {
                                                        "type": "string",
                                                        "format": "date"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Logement non trouvé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Logement non trouvé."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/promotion/all": {
            "get": {
                "tags": [
                    "Promotion"
                ],
                "summary": "Obtenir toutes les promotions sur le site avec détails du logement et de l'utilisateur(Dashboard Admin)",
                "operationId": "a97c2cf22edcb590e73c6ddac0811427",
                "responses": {
                    "200": {
                        "description": "Liste de toutes les promotions avec les détails du logement et de l'utilisateur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "housing": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "address": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "housing.user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "firstname": {
                                                                "type": "string"
                                                            },
                                                            "lastname": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "number_of_reservation": {
                                                        "type": "integer"
                                                    },
                                                    "value": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "is_encours": {
                                                        "type": "boolean"
                                                    },
                                                    "date_debut": {
                                                        "type": "string",
                                                        "format": "date"
                                                    },
                                                    "date_fin": {
                                                        "type": "string",
                                                        "format": "date"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/promotion/delete/{id}": {
            "delete": {
                "tags": [
                    "Promotion"
                ],
                "summary": "Supprimer une promotion par ID",
                "operationId": "c9c23ffa57c7684a6b194b8e45ee8e62",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de la promotion à supprimer",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Promotion supprimée avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Promotion supprimée avec succès."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Promotion non trouvée",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Promotion non trouvée."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/propertyType/index": {
            "get": {
                "tags": [
                    "PropertyType"
                ],
                "summary": "Get all property types",
                "operationId": "bd9c8a59232723305d8b74d927ca8a94",
                "responses": {
                    "200": {
                        "description": "List of property types"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/propertyType/indexBlock": {
            "get": {
                "tags": [
                    "PropertyType"
                ],
                "summary": "Get all property types",
                "operationId": "2e0e45d8e0971798ddf57372e5a19798",
                "responses": {
                    "200": {
                        "description": "List of property types"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/propertyType/store": {
            "post": {
                "tags": [
                    "PropertyType"
                ],
                "summary": "Create a new propertyType ",
                "operationId": "f545ad8bf73cf68ce18ba4f9c3932498",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Appartement"
                                    },
                                    "icone": {
                                        "description": "Image de profil d'identité (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "PropertyType  created successfully"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/propertyType/show/{id}": {
            "get": {
                "tags": [
                    "PropertyType"
                ],
                "summary": "Get a specific property type by ID",
                "operationId": "8eb3b52cc82c3d6b987c40f9a2272c5a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the property type",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Property type details"
                    },
                    "404": {
                        "description": "Property type not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/propertyType/updateName/{id}": {
            "put": {
                "tags": [
                    "PropertyType"
                ],
                "summary": "Update a property type by ID",
                "operationId": "b9ad39a5b6a3a494609d5ae7910098fd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the property type",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Appartement,etc"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Property type updated successfully"
                    },
                    "404": {
                        "description": "Property type not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/propertyType/updateIcone/{id}": {
            "post": {
                "tags": [
                    "PropertyType"
                ],
                "summary": "Update an propertyType icone by ID",
                "operationId": "a758a479dce628cf0c704948576b0729",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the propertyType to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "icone": {
                                        "description": "Image de profil d'identité (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "PropertyType updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "PropertyType updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "PropertyType not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "PropertyType not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/propertyType/destroy/{id}": {
            "delete": {
                "tags": [
                    "PropertyType"
                ],
                "summary": "Delete a property type by ID",
                "operationId": "5a1e012d0dcec5c19acc49fbdf3111f7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the property type",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Property type deleted successfully"
                    },
                    "404": {
                        "description": "Property type not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/propertyType/block/{id}": {
            "put": {
                "tags": [
                    "PropertyType"
                ],
                "summary": "Block a property type",
                "operationId": "0f9f5baf536680552b1ca22b725c12dd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the property type to block",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PropertyType successfully blocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "PropertyType successfully blocked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "PropertyType not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "PropertyType not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/propertyType/unblock/{id}": {
            "put": {
                "tags": [
                    "PropertyType"
                ],
                "summary": "Unblock a property type",
                "operationId": "92ab5b1baa61e91e25c9ada664ad5033",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the property type to unblock",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PropertyType successfully unblocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "PropertyType successfully unblocked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "PropertyType not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "PropertyType not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reduction/add": {
            "post": {
                "tags": [
                    "Reduction"
                ],
                "summary": "Ajouter une nouvelle réduction",
                "operationId": "8dcdfd95ed65609ae0909e644bec634d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "housing_id",
                                    "night_number",
                                    "value",
                                    "date_debut",
                                    "date_fin"
                                ],
                                "properties": {
                                    "housing_id": {
                                        "description": "ID du logement",
                                        "type": "integer"
                                    },
                                    "night_number": {
                                        "description": "Nombre de nuits",
                                        "type": "integer"
                                    },
                                    "value": {
                                        "description": "Valeur de la réduction",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "date_debut": {
                                        "description": "Date de début de la réduction",
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "date_fin": {
                                        "description": "Date de fin de la réduction",
                                        "type": "string",
                                        "format": "date"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Réduction ajoutée avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Réduction ajoutée avec succès."
                                        },
                                        "reduction": {
                                            "properties": {
                                                "housing_id": {
                                                    "type": "integer"
                                                },
                                                "night_number": {
                                                    "type": "integer"
                                                },
                                                "value": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "is_encours": {
                                                    "type": "boolean"
                                                },
                                                "date_debut": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "date_fin": {
                                                    "type": "string",
                                                    "format": "date"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Réduction en cours avec même nombre de nuits",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Ce logement a déjà une réduction en cours avec le même nombre de nuits."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Données non valides",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "properties": {
                                                "housing_id": {
                                                    "type": "string",
                                                    "example": "Le logement est requis."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reduction/user": {
            "get": {
                "tags": [
                    "Reduction"
                ],
                "summary": "Obtenir les réductions de l'utilisateur connecté",
                "operationId": "c151c5ac6549389cabfb0bdf6f2bced6",
                "responses": {
                    "200": {
                        "description": "Réductions associées à l'utilisateur connecté",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "housing_id": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "night_number": {
                                                        "type": "integer",
                                                        "example": 10
                                                    },
                                                    "value": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 15.5
                                                    },
                                                    "is_encours": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "date_debut": {
                                                        "type": "string",
                                                        "format": "date"
                                                    },
                                                    "date_fin": {
                                                        "type": "string",
                                                        "format": "date"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Utilisateur non connecté",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Utilisateur non connecté."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reduction/housing/{housingId}": {
            "get": {
                "tags": [
                    "Reduction"
                ],
                "summary": "Obtenir toutes les réductions d'un logement donné",
                "operationId": "1619e9adb11d42846dd82e1170d5e1aa",
                "parameters": [
                    {
                        "name": "housingId",
                        "in": "path",
                        "description": "ID du logement",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Toutes les réductions associées au logement",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "housing_id": {
                                                        "type": "integer"
                                                    },
                                                    "night_number": {
                                                        "type": "integer"
                                                    },
                                                    "value": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "is_encours": {
                                                        "type": "boolean"
                                                    },
                                                    "date_debut": {
                                                        "type": "string",
                                                        "format": "date"
                                                    },
                                                    "date_fin": {
                                                        "type": "string",
                                                        "format": "date"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Logement non trouvé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Logement non trouvé."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reduction/all": {
            "get": {
                "tags": [
                    "Reduction"
                ],
                "summary": "Obtenir toutes les réductions sur le site avec détails du logement et de l'utilisateur(Dashboard Admin)",
                "operationId": "54a86da1b3fd08f45f1f67f8f652eb08",
                "responses": {
                    "200": {
                        "description": "Liste de toutes les réductions avec les détails du logement et de l'utilisateur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "housing": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "address": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "housing.user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "firstname": {
                                                                "type": "string"
                                                            },
                                                            "lastname": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "night_number": {
                                                        "type": "integer"
                                                    },
                                                    "value": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "is_encours": {
                                                        "type": "boolean"
                                                    },
                                                    "date_debut": {
                                                        "type": "string",
                                                        "format": "date"
                                                    },
                                                    "date_fin": {
                                                        "type": "string",
                                                        "format": "date"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reduction/delete/{id}": {
            "delete": {
                "tags": [
                    "Reduction"
                ],
                "summary": "Supprimer une réduction par ID",
                "operationId": "73481fb655ac012b5130221866b00864",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID de la réduction à supprimer",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Réduction supprimée avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Réduction supprimée avec succès."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Réduction non trouvée",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Réduction non trouvée."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/store": {
            "post": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Créer une réservation avec paiement",
                "description": "Crée une réservation pour un logement avec un paiement associé. Accepte un fichier image pour la photo des voyageurs voulant réserver la réservation.",
                "operationId": "7913894d1c843eec5c22b1bd10d13a5c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "housing_id",
                                    "date_of_starting",
                                    "date_of_end",
                                    "number_of_adult",
                                    "code_pays",
                                    "telephone_traveler",
                                    "photo",
                                    "heure_arrivee_max",
                                    "heure_arrivee_min",
                                    "is_tranche_paiement",
                                    "montant_total",
                                    "valeur_payee",
                                    "payment_method",
                                    "id_transaction",
                                    "statut_paiement"
                                ],
                                "properties": {
                                    "housing_id": {
                                        "description": "ID du logement",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "date_of_starting": {
                                        "description": "Date de début de la réservation",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-05-01"
                                    },
                                    "date_of_end": {
                                        "description": "Date de fin de la réservation",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-05-07"
                                    },
                                    "number_of_adult": {
                                        "description": "Nombre d'adultes",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "number_of_child": {
                                        "description": "Nombre d'enfants",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "number_of_domestical_animal": {
                                        "description": "Nombre d'animaux domestiques",
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "number_of_baby": {
                                        "description": "Nombre de bébés",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "message_to_hote": {
                                        "description": "Message à l'hôte",
                                        "type": "string",
                                        "example": "Nous avons hâte de visiter votre logement!"
                                    },
                                    "code_pays": {
                                        "description": "Code du pays",
                                        "type": "string",
                                        "example": "FRA"
                                    },
                                    "telephone_traveler": {
                                        "description": "Numéro de téléphone du voyageur",
                                        "type": "integer",
                                        "example": 123456789
                                    },
                                    "photo": {
                                        "description": "Photo de la réservation",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "heure_arrivee_max": {
                                        "description": "Heure d'arrivée maximale",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "18:00"
                                    },
                                    "heure_arrivee_min": {
                                        "description": "Heure d'arrivée minimale",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "14:00"
                                    },
                                    "is_tranche_paiement": {
                                        "description": "Paiement en plusieurs tranches",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "montant_total": {
                                        "description": "Montant total",
                                        "type": "number",
                                        "format": "float",
                                        "example": 500
                                    },
                                    "valeur_payee": {
                                        "description": "Montant déjà payé",
                                        "type": "number",
                                        "format": "float",
                                        "example": 250
                                    },
                                    "payment_method": {
                                        "description": "Méthode de paiement",
                                        "type": "string",
                                        "example": "Credit Card"
                                    },
                                    "id_transaction": {
                                        "description": "Identifiant de la transaction",
                                        "type": "string",
                                        "example": "TX123456789"
                                    },
                                    "statut_paiement": {
                                        "description": "Statut du paiement",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Réservation et paiement créés avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Réservation et paiement créés avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflit de réservation ou problème de paiement",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Les dates de la réservation chevauchent celles d'une réservation existante"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Logement non trouvé ou indisponible",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logement non trouvé ou indisponible"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/hote_confirm_reservation/{idReservation}": {
            "put": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Confirmer la reservation d un voyageur sur un de ses biens",
                "description": "Confirmer la reservation d un voyageur sur un de ses biens",
                "operationId": "d08262ea66d004a3d51bb2431460cf35",
                "parameters": [
                    {
                        "name": "idReservation",
                        "in": "path",
                        "description": "ID of the reservation",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "reservation confirmed successfully"
                    },
                    "404": {
                        "description": "reservation not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/hote_reject_reservation/{idReservation}": {
            "put": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Rejeter la reservation d un voyageur sur un de ses biens avec un motif à l'appui",
                "description": "Rejeter la reservation d un voyageur sur un de ses biens avec un motif à l'appui",
                "operationId": "c4a98456912659edaf3d81e5ddc80a22",
                "parameters": [
                    {
                        "name": "idReservation",
                        "in": "path",
                        "description": "ID of the reservation",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "motif_rejet_hote"
                                ],
                                "properties": {
                                    "motif_rejet_hote": {
                                        "type": "string",
                                        "example": "motif"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "reservation rejected successfully"
                    },
                    "404": {
                        "description": "reservation not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/traveler_reject_reservation/{idReservation}": {
            "put": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Annulation d une reservation par un voyageur avec le motif à l'appui",
                "description": "Annulation d une reservation par un voyageur avec le motif à l'appui",
                "operationId": "ad2f15c0cd5162fb3fe8c93c2c27ad03",
                "parameters": [
                    {
                        "name": "idReservation",
                        "in": "path",
                        "description": "ID of the reservation",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "motif_rejet_traveler"
                                ],
                                "properties": {
                                    "motif_rejet_traveler": {
                                        "type": "string",
                                        "example": "motif"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "reservation canceled successfully"
                    },
                    "404": {
                        "description": "reservation not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/getReservationsByHousingId/{housingId}": {
            "get": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Liste et nombres des réservations par logement",
                "description": "Liste et nombres des réservations par logement",
                "operationId": "f1e84997017dae28d368e4c54846829c",
                "parameters": [
                    {
                        "name": "housingId",
                        "in": "path",
                        "description": "Get housing ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "number of reservation"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/showDetailOfReservationForHote/{idReservation}": {
            "get": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Détail d'une réservation côté hote",
                "description": "Détail d'une réservation côté hote",
                "operationId": "602c09f1476456aac2ad961876cbbe1a",
                "parameters": [
                    {
                        "name": "idReservation",
                        "in": "path",
                        "description": "Get user ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Détail d'une réservation côté hote"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/confirmIntegration": {
            "post": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Confirmer l'intégration après une réservation(c'est le voyageur qui confirme)",
                "description": "Confirme l'intégration d'une réservation après vérification des conditions nécessaires.",
                "operationId": "4ac728ae10c93ccc846b743e8cc565d8",
                "requestBody": {
                    "description": "Informations pour confirmer l'intégration",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "reservation_id": {
                                        "description": "L'ID de la réservation à intégrer",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Intégration confirmée et montant crédité",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Intégration confirmée et montant crédité"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Problème avec la confirmation d'intégration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "La réservation doit être confirmée par l'hôte"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Réservation ou autre élément non trouvé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Réservation non trouvée"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/retrait/ListRetraitRejectForAdmin": {
            "get": {
                "tags": [
                    "Retraits"
                ],
                "summary": "Liste des retraits rejetés sur la  plateforme(admin)",
                "description": "Liste des retraits rejetés sur la  plateforme(admin)",
                "operationId": "5b27d54fe1220270164c3cb650c6a540",
                "responses": {
                    "200": {
                        "description": "Liste des retraits rejetés sur la  plateforme(admin)"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/retrait/ListRetraitWaitingConfirmationByAdmin": {
            "get": {
                "tags": [
                    "Retraits"
                ],
                "summary": "Liste des retrait en attente de validation sur la plateforme(admin)",
                "description": "Liste des retrait en attente de validation sur la plateforme(admin)",
                "operationId": "2777e6fd155400387015a9ba819d0483",
                "responses": {
                    "200": {
                        "description": "Liste des retrait en attente de validation sur la plateforme(admin)"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/retrait/ListRetraitConfirmedByAdmin": {
            "get": {
                "tags": [
                    "Retraits"
                ],
                "summary": "Liste des retraits déjà confirmé par l'admin la plateforme(admin)",
                "description": "Liste des retraits déjà confirmé par l'admin la plateforme(admin)",
                "operationId": "b0125f99ad1ce4721f307722c5322b41",
                "responses": {
                    "200": {
                        "description": "Liste des retraits déjà confirmé par l'admin la plateforme(admin)"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/retrait/ListRetraitOfUserAuth": {
            "get": {
                "tags": [
                    "Retraits"
                ],
                "summary": "Liste des retraits effectué par un utilisateur connecté",
                "description": "Liste des retraits effectué par un utilisateur connecté",
                "operationId": "cc9fe95e12f66cf8245f271dc49f98c4",
                "responses": {
                    "200": {
                        "description": "Liste des retraits effectué par un utilisateur connecté"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/retrait/ListRetraitRejectOfUserAuth": {
            "get": {
                "tags": [
                    "Retraits"
                ],
                "summary": "Liste des retraits effectué par un utilisateur connecté mais rejeté par l'administrateur",
                "description": "Liste des retraits effectué par un utilisateur connecté mais rejeté par l'administrateur",
                "operationId": "8432efbab0904a781d2fea3982739a73",
                "responses": {
                    "200": {
                        "description": "Liste des retraits effectué par un utilisateur connecté"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/retrait/validateRetraitByAdmin/{retraitId}": {
            "put": {
                "tags": [
                    "Retraits"
                ],
                "summary": "Validation d'une demande de retrait par l'admin",
                "operationId": "2069783fd19ad5630cd4c1a7f1f20236",
                "parameters": [
                    {
                        "name": "retraitId",
                        "in": "path",
                        "description": "ID du retrait à valider",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "montant_valid": {
                                        "description": "Montant validé pour le retrait",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful validation of withdrawal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Retraits successfully validated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request or validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Withdrawal not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/retrait/rejectRetraitByAdmin/{retraitId}": {
            "put": {
                "tags": [
                    "Retraits"
                ],
                "summary": "Rejet d'un retrait par un administrateur",
                "description": "Cette fonction permet à un administrateur de rejeter un retrait en spécifiant un motif de blocage.",
                "operationId": "40d081beaef4f20ea493d72d5cf3289c",
                "parameters": [
                    {
                        "name": "retraitId",
                        "in": "path",
                        "description": "L'identifiant du retrait à rejeter",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Données de la requête",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "motif"
                                ],
                                "properties": {
                                    "motif": {
                                        "description": "Le motif du blocage",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Le retrait a été rejeté avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Retrait successfully rejected"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Retrait non trouvé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Retrait not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Retrait déjà validé ou déjà rejeté",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Retrait already validated or already rejected"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/retrait/store": {
            "post": {
                "tags": [
                    "Retraits"
                ],
                "summary": "Enregistrer une demande de retrait",
                "description": "Cette fonction permet à un utilisateur d'enregistrer une demande de retrait.",
                "operationId": "storeRetrait",
                "requestBody": {
                    "description": "Données de la demande de retrait",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "payment_method",
                                    "montant_reel",
                                    "identifiant_payement_method"
                                ],
                                "properties": {
                                    "payment_method": {
                                        "description": "Méthode de paiement utilisée pour le retrait",
                                        "type": "string",
                                        "example": "momo"
                                    },
                                    "montant_reel": {
                                        "description": "Montant réel à retirer",
                                        "type": "number",
                                        "format": "float",
                                        "example": 100
                                    },
                                    "identifiant_payement_method": {
                                        "description": "Identifiant de la méthode de paiement",
                                        "type": "string",
                                        "example": "742876298"
                                    },
                                    "libelle": {
                                        "description": "Libellé de la demande de retrait",
                                        "type": "string",
                                        "example": "Demande de retrait de fonds"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Demande de retrait enregistrée avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Demande de retrait enregistrée avec succès"
                                        },
                                        "date": {
                                            "$ref": ""
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Solde insuffisant",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Solde insuffisant"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Non authentifié",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Non authentifié"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/retrait/ListRetraitOfTravelerWaitingConfirmationByAdmin": {
            "get": {
                "tags": [
                    "Retraits"
                ],
                "summary": "Liste des demandes retrait des voyageurs en attente de validation sur la plateforme(admin)",
                "description": "Liste des demandes retrait des voyageurs en attente de validation sur la plateforme(admin)",
                "operationId": "c7f284d228aded06e04e7e08ba726bf1",
                "responses": {
                    "200": {
                        "description": "Liste des demandes retrait des voyageurs en attente de validation sur la plateforme(admin)"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/retrait/ListRetraitOfHoteWaitingConfirmationByAdmin": {
            "get": {
                "tags": [
                    "Retraits"
                ],
                "summary": "Liste des demandes retrait des hotes en attente de validation sur la plateforme(admin)",
                "description": "Liste des demandes retrait des hotes en attente de validation sur la plateforme(admin)",
                "operationId": "d67cf9f17a44ecb309d4753e7ddb6199",
                "responses": {
                    "200": {
                        "description": "Liste des demandes retrait des hotes en attente de validation sur la plateforme(admin)"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/review/index": {
            "get": {
                "tags": [
                    "Review"
                ],
                "summary": "Get all reviews",
                "operationId": "f0a59ce4aadc254091d75be591d7f199",
                "responses": {
                    "200": {
                        "description": "List of reviews"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/review/store": {
            "post": {
                "tags": [
                    "Review"
                ],
                "summary": "Créer un nouvel avis",
                "operationId": "createReview",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "content"
                                ],
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "example": "J'apprécie la démarche, etc."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Avis créé avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Création réussie"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Identifiants invalides"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/review/show/{id}": {
            "get": {
                "tags": [
                    "Review"
                ],
                "summary": "Get a specific review by ID",
                "operationId": "f23ec6c60b4503f16d71551362f85bc4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the review",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review details"
                    },
                    "404": {
                        "description": "Review not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/review/update/{id}": {
            "put": {
                "tags": [
                    "Review"
                ],
                "summary": "Update a review by ID",
                "operationId": "e6d6cf690790d53cdea5cfff1ce14ad8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the review",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "content",
                                    "review_id"
                                ],
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "example": "j'apprécie la démarche,etc"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Review updated successfully"
                    },
                    "404": {
                        "description": "Review not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/review/destroy/{id}": {
            "delete": {
                "tags": [
                    "Review"
                ],
                "summary": "Delete a review by ID",
                "operationId": "a7c27d88f34efa4287f69c3796288607",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the review",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Review deleted successfully"
                    },
                    "404": {
                        "description": "Review not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/review/block/{id}": {
            "put": {
                "tags": [
                    "Review"
                ],
                "summary": "Block a review",
                "operationId": "67b2b38d1d2961781713e586ddbeeab5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the review to block",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review successfully blocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Review successfully blocked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Review not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/review/unblock/{id}": {
            "put": {
                "tags": [
                    "Review"
                ],
                "summary": "Unblock a review",
                "operationId": "3e6dee7061398c95f70f010063b144e4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the review to unblock",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review successfully unblocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Review successfully unblocked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Review not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/reviews/note/add": {
            "post": {
                "tags": [
                    "Note et Commentaire sur les reservation (Logement)"
                ],
                "summary": "Stocke les notes pour chaque critère ainsi que le commentaire général de la réservation",
                "description": "Stocke les notes pour chaque critère ainsi que le commentaire général de la réservation.",
                "operationId": "28b5995c43af7d04bd54a6079e74ec48",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "reservation_id": {
                                        "description": "ID de la réservation",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "criteria_notes": {
                                        "description": "Tableau des notes pour chaque critère",
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "criteria_id": {
                                                    "description": "ID du critère",
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "note": {
                                                    "description": "Note attribuée au critère",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": "5"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "general_comment": {
                                        "description": "Commentaire général sur la réservation",
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Succès - Notes et commentaire ajoutés avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Notes et commentaire ajoutés avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur de validation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/{housingId}/reviews/note/get": {
            "get": {
                "tags": [
                    "Note et Commentaire sur les reservation (Logement)"
                ],
                "summary": "Lister pour un logement donné la moyenne des notes par critère ,la moyenne globale,les commentaires des utilisateurs.",
                "operationId": "58a0dbf89298760cb0d6855ce15ddd56",
                "parameters": [
                    {
                        "name": "housingId",
                        "in": "path",
                        "description": "Identifiant du logement",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Détails des réservations pour un logement donné, des notes des utilisateurs et des commentaires associés",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Logement ou réservations non trouvés",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message d'erreur",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur interne",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message d'erreur",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/reservation/statistiques_notes/{housing_id}": {
            "get": {
                "tags": [
                    "Note et Commentaire sur les reservation (Logement)"
                ],
                "summary": "Implementation de la fonction qui retourne pour un logement donné,la statistique des notes obtenus par utilisateur(exemple. on dira le nombre de personne qui ont noté 5,le nombre personne qui ont noté 4,le nombre de personne qui ont noté 3,etc",
                "description": "Cette API retourne le nombre total d'utilisateurs ayant donné leur avis sur le logement ainsi que le nombre de notes obtenues pour chaque valeur de 1 à 5, et le pourcentage de chaque catégorie de notes.",
                "operationId": "5d02cc6dee340b8bf3cd9e39845de75c",
                "parameters": [
                    {
                        "name": "housing_id",
                        "in": "path",
                        "description": "L'ID du logement",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Statistiques des notes des utilisateurs pour le logement donné",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "logement_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "nombre_total_utilisateurs": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "statistiques": {
                                            "properties": {
                                                "notes_5": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "notes_4": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "notes_3": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "notes_2": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "notes_1": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "pourcentages": {
                                            "properties": {
                                                "notes_5": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 50
                                                },
                                                "notes_4": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 30
                                                },
                                                "notes_3": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10
                                                },
                                                "notes_2": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10
                                                },
                                                "notes_1": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Paramètres invalides ou erreur de requête"
                    },
                    "500": {
                        "description": "Erreur interne du serveur"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/role/index": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get all roles",
                "operationId": "b3d674de4d1bfdce32734bddc8628891",
                "responses": {
                    "200": {
                        "description": "List of roles"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/role/store": {
            "post": {
                "tags": [
                    "Role"
                ],
                "summary": "Create a new role ",
                "operationId": "217d536f741ea073dee6d97e5bb36df9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "traveler"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role  created successfully"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/role/show/{id}": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get a specific role by ID",
                "operationId": "a40324f1b443d45a408830e2695bbeb9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the role",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role details"
                    },
                    "404": {
                        "description": "Role not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/role/destroy/{id}": {
            "delete": {
                "tags": [
                    "Role"
                ],
                "summary": "Delete a role by ID",
                "operationId": "fa71958128495cee0ebb0097bad4087f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the role",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Role deleted successfully"
                    },
                    "404": {
                        "description": "Role not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/index": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all users",
                "operationId": "0805ec6c84d0da39ad28b974443fc310",
                "responses": {
                    "200": {
                        "description": "List of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "lastname": {
                                                "type": "string",
                                                "example": "Doe"
                                            },
                                            "firstname": {
                                                "type": "string",
                                                "example": "John"
                                            },
                                            "email": {
                                                "type": "string",
                                                "example": "john.doe@example.com"
                                            },
                                            "code_pays": {
                                                "type": "string",
                                                "example": "FR"
                                            },
                                            "telephone": {
                                                "type": "string",
                                                "example": "0123456789"
                                            },
                                            "country": {
                                                "type": "string",
                                                "example": "France"
                                            },
                                            "file_profil": {
                                                "type": "string",
                                                "example": "profile.jpg"
                                            },
                                            "piece_of_identity": {
                                                "type": "string",
                                                "example": "id_card.jpg"
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "Paris"
                                            },
                                            "address": {
                                                "type": "string",
                                                "example": "123 Rue de la Liberté"
                                            },
                                            "sexe": {
                                                "type": "string",
                                                "example": "M"
                                            },
                                            "postal_code": {
                                                "type": "string",
                                                "example": "75001"
                                            },
                                            "is_deleted": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "is_blocked": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "email_verified_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-04-03 10:00:00"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-01-01 08:00:00"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-02-01 09:00:00"
                                            },
                                            "user_role": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Admin"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "user_language": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "language_id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "French"
                                                        },
                                                        "icone": {
                                                            "type": "string",
                                                            "example": "fr.png"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "user_preference": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "preference_id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Theme"
                                                        },
                                                        "icone": {
                                                            "type": "string",
                                                            "example": "theme.png"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/destroy/{id}": {
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Marquer un utilisateur comme supprimé",
                "description": "Marque un utilisateur comme supprimé en définissant is_deleted à true.",
                "operationId": "2440c968ffc558aee3d990c6410a009b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Utilisateur marqué comme supprimé avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Utilisateur marqué comme supprimé avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Utilisateur non trouvé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Utilisateur non trouvé"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/userReviews": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Obtenir les avis de l'utilisateur connecté",
                "description": "Récupère les avis associés à l'utilisateur connecté.",
                "operationId": "0967546a3643a42d377e6730e4f7d11e",
                "responses": {
                    "200": {
                        "description": "Liste des avis de l'utilisateur connecté",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Non autorisé"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/userLanguages": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Obtenir les langues de l'utilisateur connecté",
                "description": "Récupère les langues associées à l'utilisateur connecté.",
                "operationId": "2a078e8e4bafaaea1d32d9ead01af31d",
                "responses": {
                    "200": {
                        "description": "Langues de l'utilisateur connecté",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Non autorisé"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/update_profile_photo": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Mettre à jour la photo de profil de l'utilisateur",
                "description": "Permet à l'utilisateur de mettre à jour sa photo de profil en téléchargeant une nouvelle image",
                "operationId": "ed8c68d39d7751288f6b978dc23375a4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "profile_photo"
                                ],
                                "properties": {
                                    "profile_photo": {
                                        "description": "Nouvelle photo de profil de l'utilisateur (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Photo de profil mise à jour avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Photo de profil mise à jour avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur de validation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/block/{id}": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Block a user",
                "operationId": "d50e401c3c063634eda5cf5b636f0037",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the users to block",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users successfully blocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "User successfully blocked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/unblock/{id}": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Unblock a users",
                "operationId": "f1fc4c086407cb34fd8afd058e0dd8f7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the userto unblock",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully unblocked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "User successfully unblocked"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/pays/{pays}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all users from a country",
                "operationId": "c9ac6ebc89a18c1dea28b632a1c71055",
                "parameters": [
                    {
                        "name": "pays",
                        "in": "path",
                        "description": "Code of the country",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users from the specified country",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/update_password": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update user password",
                "description": "Update user password.",
                "operationId": "87b3fccdbf4f57f8da4464af32da82b9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "old_password",
                                    "new_password",
                                    "new_password_confirmation"
                                ],
                                "properties": {
                                    "old_password": {
                                        "type": "string",
                                        "example": "old_password"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "example": "new_password"
                                    },
                                    "new_password_confirmation": {
                                        "type": "string",
                                        "example": "new_password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/travelers": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Obtenir la liste des utilisateurs voyageurs",
                "operationId": "3f2d4bf4a37b79aa0d0018e65e8c5cf3",
                "responses": {
                    "200": {
                        "description": "Liste des utilisateurs avec le rôle 'traveler'",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Aucun utilisateur avec le rôle 'traveler' trouvé"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/update": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Mettre à jour les informations d'un utilisateur",
                "operationId": "189e1acde2c3406ead476c354f1ee37a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "nom": {
                                        "type": "string"
                                    },
                                    "prenom": {
                                        "type": "string"
                                    },
                                    "telephone": {
                                        "type": "string"
                                    },
                                    "code_pays": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "pays": {
                                        "type": "string"
                                    },
                                    "ville": {
                                        "type": "string"
                                    },
                                    "addresse": {
                                        "type": "string"
                                    },
                                    "sexe": {
                                        "type": "string"
                                    },
                                    "postal_code": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Informations de l'utilisateur mises à jour avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Informations de l'utilisateur mises à jour avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur de validation des données"
                    },
                    "404": {
                        "description": "Utilisateur non trouvé"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/hotes": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Obtenir la liste des utilisateurs hote",
                "operationId": "3956df73298648ef2edffb651c77b261",
                "responses": {
                    "200": {
                        "description": "Liste des utilisateurs ayant le rôle 'hote'",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Aucun utilisateur avec le rôle 'traveller' trouvé"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/admins": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Obtenir la liste des utilisateurs admin",
                "operationId": "6bb01b94a71a6320d26e908b15a0f38f",
                "responses": {
                    "200": {
                        "description": "Liste des utilisateurs ayant le rôle 'admin'",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Aucun utilisateur avec le rôle 'admin' trouvé"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/detail/{userId}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Obtenir les détails d'un utilisateur",
                "description": "Retourne des détails complets pour un utilisateur spécifique, y compris les informations personnelles, les langues, les préférences, le nombre de logements, le nombre de réservations, le solde du portefeuille, et le nombre total de transactions.",
                "operationId": "3cc091dda63762ca396e4d04016aebcf",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID de l'utilisateur",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Détails de l'utilisateur obtenus avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "user_info": {
                                                    "description": "Informations sur l'utilisateur",
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "lastname": {
                                                            "type": "string"
                                                        },
                                                        "firstname": {
                                                            "type": "string"
                                                        },
                                                        "email": {
                                                            "type": "string"
                                                        },
                                                        "code_pays": {
                                                            "type": "string"
                                                        },
                                                        "telephone": {
                                                            "type": "string"
                                                        },
                                                        "country": {
                                                            "type": "string"
                                                        },
                                                        "file_profil": {
                                                            "type": "string",
                                                            "nullable": true
                                                        },
                                                        "city": {
                                                            "type": "string"
                                                        },
                                                        "address": {
                                                            "type": "string"
                                                        },
                                                        "sexe": {
                                                            "type": "string"
                                                        },
                                                        "postal_code": {
                                                            "type": "string",
                                                            "nullable": true
                                                        },
                                                        "is_hote": {
                                                            "type": "boolean"
                                                        },
                                                        "is_traveller": {
                                                            "type": "boolean"
                                                        },
                                                        "is_admin": {
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "languages": {
                                                    "description": "Langues préférées de l'utilisateur",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "language_id": {
                                                                "type": "integer"
                                                            },
                                                            "language_name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "preferences": {
                                                    "description": "Préférences de l'utilisateur",
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "preference_id": {
                                                                "type": "integer"
                                                            },
                                                            "preference_name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "total_housings": {
                                                    "description": "Nombre de logements",
                                                    "type": "integer"
                                                },
                                                "total_reservations": {
                                                    "description": "Nombre de réservations",
                                                    "type": "integer"
                                                },
                                                "solde": {
                                                    "description": "Solde du portefeuille",
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "total_transactions": {
                                                    "description": "Nombre total de transactions",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Utilisateur non trouvé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Utilisateur non trouvé."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Une erreur s'est produite."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/{housingId}/visit_statistics": {
            "get": {
                "tags": [
                    "Trafic"
                ],
                "summary": "Obtenir des statistiques sur les visites pour un logement donné",
                "description": "Retourne le nombre total de visites, le nombre total de visites avec user_id, \n     *         le nombre total de revisites avec user_id, et le nombre total de visites sans user_id.",
                "operationId": "getHousingVisitStatistics",
                "parameters": [
                    {
                        "name": "housingId",
                        "in": "path",
                        "description": "ID du logement",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Statistiques des visites pour le logement",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total_visits": {
                                            "description": "Nombre total de visites",
                                            "type": "integer"
                                        },
                                        "total_user_visits": {
                                            "description": "Nombre total de visites avec user_id",
                                            "type": "integer"
                                        },
                                        "total_user_revisits": {
                                            "description": "Nombre total de revisites avec user_id",
                                            "type": "integer"
                                        },
                                        "total_anonymous_visits": {
                                            "description": "Nombre total de visites sans user_id",
                                            "type": "integer"
                                        },
                                        "total_anonymous_revisits": {
                                            "description": "Nombre total de revisites sans user_id",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Logement non trouvé"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/{housing_id}/date/visit_statistics": {
            "get": {
                "tags": [
                    "Trafic"
                ],
                "summary": "Obtenir des statistiques de visites pour un logement à une date donnée",
                "description": "Retourne le nombre total de visites, de visites avec utilisateur, et de revisites pour une date spécifique.",
                "operationId": "39ef28564ca6eef5e94193821af702f0",
                "parameters": [
                    {
                        "name": "housing_id",
                        "in": "path",
                        "description": "ID du logement",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date pour laquelle obtenir les statistiques au format AAAA-MM-JJ",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-05-04"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Statistiques de visites du logement pour une date donnée",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "date": {
                                            "description": "Date des statistiques",
                                            "type": "string",
                                            "example": "2024-05-04"
                                        },
                                        "total_visits": {
                                            "description": "Nombre total de visites",
                                            "type": "integer"
                                        },
                                        "total_user_visits": {
                                            "description": "Nombre total de visites avec utilisateur",
                                            "type": "integer"
                                        },
                                        "total_anonymous_visits": {
                                            "description": "Nombre total de visites sans utilisateur",
                                            "type": "integer"
                                        },
                                        "total_user_revisits": {
                                            "description": "Nombre total de revisites avec utilisateur",
                                            "type": "integer"
                                        },
                                        "total_anonymous_revisits": {
                                            "description": "Nombre total de revisites sans utilisateur",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur de requête",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Erreur lors de la récupération des statistiques."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/{housing_id}/current_month/visit_statistics": {
            "get": {
                "tags": [
                    "Trafic"
                ],
                "summary": "Obtenir des statistiques de visites pour un logement au mois courant",
                "description": "Retourne les statistiques des visites pour le mois courant, y compris le nombre total de visites, les visites avec utilisateur, les visites anonymes, et les revisites.",
                "operationId": "6c777ed8691222d330ab1cf052afa09f",
                "parameters": [
                    {
                        "name": "housing_id",
                        "in": "path",
                        "description": "ID du logement",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Statistiques des visites du mois courant pour un logement",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "month": {
                                            "description": "Mois des statistiques",
                                            "type": "string",
                                            "example": "May 2024"
                                        },
                                        "total_visits": {
                                            "description": "Nombre total de visites",
                                            "type": "integer"
                                        },
                                        "total_user_visits": {
                                            "description": "Nombre total de visites avec utilisateur",
                                            "type": "integer"
                                        },
                                        "total_anonymous_visits": {
                                            "description": "Nombre total de visites sans utilisateur",
                                            "type": "integer"
                                        },
                                        "total_user_revisits": {
                                            "description": "Nombre total de revisites avec utilisateur",
                                            "type": "integer"
                                        },
                                        "total_anonymous_revisits": {
                                            "description": "Nombre total de revisites sans utilisateur",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur lors de la récupération des statistiques",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Erreur lors de la récupération des statistiques."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/{housing_id}/current_year/visit_statistics": {
            "get": {
                "tags": [
                    "Trafic"
                ],
                "summary": "Obtenir des statistiques de visites pour un logement pour l'année actuelle",
                "description": "Retourne le nombre total de visites, les visites avec utilisateur, les visites anonymes, et les revisites pour l'année en cours.",
                "operationId": "84aa352ee7a174d1b032800b6dbf74ee",
                "parameters": [
                    {
                        "name": "housing_id",
                        "in": "path",
                        "description": "ID du logement",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Statistiques des visites pour l'année actuelle",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "year": {
                                            "description": "Année des statistiques",
                                            "type": "string",
                                            "example": "2024"
                                        },
                                        "total_visits": {
                                            "description": "Nombre total de visites",
                                            "type": "integer"
                                        },
                                        "total_user_visits": {
                                            "description": "Nombre total de visites avec utilisateur",
                                            "type": "integer"
                                        },
                                        "total_anonymous_visits": {
                                            "description": "Nombre total de visites sans utilisateur",
                                            "type": "integer"
                                        },
                                        "total_user_revisits": {
                                            "description": "Nombre total de revisites avec utilisateur",
                                            "type": "integer"
                                        },
                                        "total_anonymous_revisits": {
                                            "description": "Nombre total de revisites sans utilisateur",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur lors de la récupération des statistiques",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Erreur lors de la récupération des statistiques."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logement/{housing_id}/yearly/visit_statistics": {
            "get": {
                "tags": [
                    "Trafic"
                ],
                "summary": "Obtenir des statistiques de visites par mois pour un logement d'une année donnée",
                "description": "Retourne les statistiques des visites pour chaque mois d'une année donnée pour un logement spécifique.",
                "operationId": "f167235dcd4ac58ae91ebd0969623aab",
                "parameters": [
                    {
                        "name": "housing_id",
                        "in": "path",
                        "description": "ID du logement",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "L'année pour laquelle obtenir les statistiques",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 2024
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Statistiques des visites par mois pour une année donnée pour un logement",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "year": {
                                            "description": "Année des statistiques",
                                            "type": "integer",
                                            "example": 2024
                                        },
                                        "monthly_statistics": {
                                            "description": "Statistiques mensuelles",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "month": {
                                                        "description": "Nom du mois",
                                                        "type": "string",
                                                        "example": "January"
                                                    },
                                                    "total_visits": {
                                                        "description": "Nombre total de visites",
                                                        "type": "integer"
                                                    },
                                                    "total_user_visits": {
                                                        "description": "Nombre total de visites avec utilisateur",
                                                        "type": "integer"
                                                    },
                                                    "total_anonymous_visits": {
                                                        "description": "Nombre total de visites sans utilisateur",
                                                        "type": "integer"
                                                    },
                                                    "total_user_revisits": {
                                                        "description": "Nombre total de revisites avec utilisateur",
                                                        "type": "integer"
                                                    },
                                                    "total_anonymous_revisits": {
                                                        "description": "Nombre total de revisites sans utilisateur",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur lors de la récupération des statistiques",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Erreur lors de la récupération des statistiques."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/site/visit_statistics": {
            "get": {
                "tags": [
                    "Trafic"
                ],
                "summary": "Obtenir des statistiques sur les visites du site",
                "description": "Retourne des statistiques sur le nombre total de visites, les visites avec utilisateur, et les revisites.",
                "operationId": "09966949bfac36ee235a5f2930f8e168",
                "responses": {
                    "200": {
                        "description": "Statistiques de visites du site",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total_visits": {
                                            "description": "Nombre total de visites",
                                            "type": "integer"
                                        },
                                        "total_user_visits": {
                                            "description": "Nombre total de visites avec utilisateur",
                                            "type": "integer"
                                        },
                                        "total_anonymous_visits": {
                                            "description": "Nombre total de visites sans utilisateur",
                                            "type": "integer"
                                        },
                                        "total_user_revisits": {
                                            "description": "Nombre total de revisites avec utilisateur",
                                            "type": "integer"
                                        },
                                        "total_anonymous_revisits": {
                                            "description": "Nombre total de revisites sans utilisateur",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur de requête",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Erreur lors de la récupération des statistiques."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/site/date/visit_statistics": {
            "get": {
                "tags": [
                    "Trafic"
                ],
                "summary": "Obtenir des statistiques de visites pour une date donnée",
                "description": "Retourne le nombre total de visites, de visites avec utilisateur, et de revisites pour une date spécifique.",
                "operationId": "2f12d900950a6286ddd85f7c58cf3aee",
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date pour laquelle obtenir les statistiques au format AAAA-MM-JJ",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-05-04"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Statistiques de visites du site pour une date donnée",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "date": {
                                            "description": "Date des statistiques",
                                            "type": "string",
                                            "example": "2024-05-04"
                                        },
                                        "total_visits": {
                                            "description": "Nombre total de visites",
                                            "type": "integer"
                                        },
                                        "total_user_visits": {
                                            "description": "Nombre total de visites avec utilisateur",
                                            "type": "integer"
                                        },
                                        "total_anonymous_visits": {
                                            "description": "Nombre total de visites sans utilisateur",
                                            "type": "integer"
                                        },
                                        "total_user_revisits": {
                                            "description": "Nombre total de revisites avec utilisateur",
                                            "type": "integer"
                                        },
                                        "total_anonymous_revisits": {
                                            "description": "Nombre total de revisites sans utilisateur",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur de requête",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Date invalide ou paramètre manquant."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/site/current_month/visit_statistics": {
            "get": {
                "tags": [
                    "Trafic"
                ],
                "summary": "Obtenir des statistiques de visites pour le mois courant",
                "description": "Retourne les statistiques des visites pour le mois courant, y compris le nombre total de visites, les visites avec utilisateur, les visites anonymes, et les revisites.",
                "operationId": "343419b0e5471af6b41750c7975e38c3",
                "responses": {
                    "200": {
                        "description": "Statistiques des visites du mois courant",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "month": {
                                            "description": "Mois de statistiques",
                                            "type": "string",
                                            "example": "May 2024"
                                        },
                                        "total_visits": {
                                            "description": "Nombre total de visites",
                                            "type": "integer"
                                        },
                                        "total_user_visits": {
                                            "description": "Nombre total de visites avec utilisateur",
                                            "type": "integer"
                                        },
                                        "total_anonymous_visits": {
                                            "description": "Nombre total de visites sans utilisateur",
                                            "type": "integer"
                                        },
                                        "total_user_revisits": {
                                            "description": "Nombre total de revisites avec utilisateur",
                                            "type": "integer"
                                        },
                                        "total_anonymous_revisits": {
                                            "description": "Nombre total de revisites sans utilisateur",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur de requête",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Erreur lors de la récupération des statistiques."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/site/current_year/visit_statistics": {
            "get": {
                "tags": [
                    "Trafic"
                ],
                "summary": "Obtenir des statistiques de visites pour l'année actuelle",
                "description": "Retourne le nombre total de visites, les visites avec utilisateur, les visites anonymes, et les revisites pour l'année en cours.",
                "operationId": "3ecba11e264f9623c6acc30cc1f0917b",
                "responses": {
                    "200": {
                        "description": "Statistiques des visites pour l'année actuelle",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "year": {
                                            "description": "Année de statistiques",
                                            "type": "string",
                                            "example": "2024"
                                        },
                                        "total_visits": {
                                            "description": "Nombre total de visites",
                                            "type": "integer"
                                        },
                                        "total_user_visits": {
                                            "description": "Nombre total de visites avec utilisateur",
                                            "type": "integer"
                                        },
                                        "total_anonymous_visits": {
                                            "description": "Nombre total de visites sans utilisateur",
                                            "type": "integer"
                                        },
                                        "total_user_revisits": {
                                            "description": "Nombre total de revisites avec utilisateur",
                                            "type": "integer"
                                        },
                                        "total_anonymous_revisits": {
                                            "description": "Nombre total de revisites sans utilisateur",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur lors de la récupération des statistiques",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Erreur lors de la récupération des statistiques."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/site/yearly/visit_statistics": {
            "get": {
                "tags": [
                    "Trafic"
                ],
                "summary": "Obtenir des statistiques de visites par mois pour une année donnée",
                "description": "Retourne les statistiques des visites pour chaque mois d'une année donnée.",
                "operationId": "23116d3832a1521223501b4147d8795f",
                "parameters": [
                    {
                        "name": "year",
                        "in": "query",
                        "description": "L'année pour laquelle obtenir les statistiques",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 2024
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Statistiques des visites par mois pour une année donnée",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "year": {
                                            "description": "Année des statistiques",
                                            "type": "integer",
                                            "example": 2024
                                        },
                                        "monthly_statistics": {
                                            "description": "Statistiques mensuelles",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "month": {
                                                        "description": "Nom du mois",
                                                        "type": "string",
                                                        "example": "January"
                                                    },
                                                    "total_visits": {
                                                        "description": "Nombre total de visites",
                                                        "type": "integer"
                                                    },
                                                    "total_user_visits": {
                                                        "description": "Nombre total de visites avec utilisateur",
                                                        "type": "integer"
                                                    },
                                                    "total_anonymous_visits": {
                                                        "description": "Nombre total de visites sans utilisateur",
                                                        "type": "integer"
                                                    },
                                                    "total_user_revisits": {
                                                        "description": "Nombre total de revisites avec utilisateur",
                                                        "type": "integer"
                                                    },
                                                    "total_anonymous_revisits": {
                                                        "description": "Nombre total de revisites sans utilisateur",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur lors de la récupération des statistiques",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Erreur lors de la récupération des statistiques."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/preference/add": {
            "post": {
                "tags": [
                    "User_preference"
                ],
                "summary": "Ajouter les préférences d'un utilisateur",
                "description": "Ajoute les préférences sélectionnées par un utilisateur.",
                "operationId": "082aa7f313c2e68cf6c737bbb929b127",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "preferences"
                                ],
                                "properties": {
                                    "preferences": {
                                        "description": "Liste des identifiants de préférence à ajouter",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Les préférences de l'utilisateur ont été mises à jour avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur de validation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/preference/remove": {
            "post": {
                "tags": [
                    "User_preference"
                ],
                "summary": "Supprimer les préférences d'un utilisateur",
                "description": "Supprimer les préférences sélectionnées par un utilisateur.",
                "operationId": "7173aae80108eccc85250b528b18e3ea",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "preferences"
                                ],
                                "properties": {
                                    "preferences": {
                                        "description": "Liste des identifiants de préférence à supprimer",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Les préférences de l'utilisateur ont été mises à jour avec succès"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur de validation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/preference/show": {
            "get": {
                "tags": [
                    "User_preference"
                ],
                "summary": "Afficher les préférences de l'utilisateur connecté",
                "description": "Récupère les préférences de l'utilisateur connecté.",
                "operationId": "81fe28917b1f66d3b26577de64965f2d",
                "responses": {
                    "200": {
                        "description": "Liste des préférences de l'utilisateur connecté",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Non autorisé"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/verificationdocument/index": {
            "get": {
                "tags": [
                    "verification_document"
                ],
                "summary": "Récupérer la liste des documents de vérification par utilisateur",
                "description": "Récupère la liste des documents de vérification groupés par utilisateur avec leur statut.",
                "operationId": "listVerificationDocumentsByUser",
                "responses": {
                    "200": {
                        "description": "Liste des documents de vérification par utilisateur",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Une erreur est survenue lors de la récupération des documents de vérification."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/verificationdocument/store": {
            "post": {
                "tags": [
                    "verification_document"
                ],
                "summary": "Ajouter des Documents de Vérification",
                "description": "Ajoute des documents de vérification avec des fichiers joints (images). Envoie des notifications aux administrateurs lorsqu'un document est ajouté.",
                "operationId": "e6999abc11a25c6d95936d686a0563a2",
                "requestBody": {
                    "description": "Requête avec des fichiers à uploader",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "id_document",
                                    "image_piece"
                                ],
                                "properties": {
                                    "id_document": {
                                        "description": "Liste des IDs des documents",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "image_piece": {
                                        "description": "Liste des fichiers image",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Documents créés avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Verification documents créés avec succès."
                                        },
                                        "verification_documents": {
                                            "description": "Documents de vérification créés",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "user_id": {
                                                        "type": "integer"
                                                    },
                                                    "document_id": {
                                                        "type": "integer"
                                                    },
                                                    "path": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Mauvaise requête",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Les tableaux id_document et image_piece doivent avoir la même longueur."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/verificationdocument/show/{id}": {
            "get": {
                "tags": [
                    "verification_document"
                ],
                "summary": "Afficher les detail d'une demande pour être hôte",
                "operationId": "382104a8b7a63c05ac443b592c9bfd78",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Information detaillée e la demande pour être hote"
                    },
                    "404": {
                        "description": "verification_document not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/verificationdocument/hote/valider/all": {
            "post": {
                "tags": [
                    "Validation documents pour etre hôte"
                ],
                "summary": "Valider les documents en un coup ,bref valider tout en un clic",
                "description": "Valide les documents de vérification pour un utilisateur et change son statut en tant qu'hôte.",
                "operationId": "12c2fea3e0430756950eccf1f3044da8",
                "requestBody": {
                    "description": "Données requises pour la validation des documents",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "verification_document_ids"
                                ],
                                "properties": {
                                    "user_id": {
                                        "description": "L'identifiant de l'utilisateur",
                                        "type": "integer"
                                    },
                                    "verification_document_ids": {
                                        "description": "Les identifiants des documents de vérification à valider",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Succès. Les documents ont été validés avec succès.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message de succès",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur de validation. Vérifiez les données d'entrée.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Message d'erreur",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur. Veuillez réessayer ultérieurement.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Message d'erreur",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/verificationdocument/hote/valider/one": {
            "post": {
                "tags": [
                    "Validation documents pour etre hôte"
                ],
                "summary": "Valider un document de vérification pour devenir hôte(ici on valide document par document)",
                "operationId": "9268f1c2d8863cea00e76fabba1aef51",
                "requestBody": {
                    "description": "Données pour valider un document de vérification",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "verification_document_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "description": "ID de l'utilisateur",
                                        "type": "integer"
                                    },
                                    "verification_document_id": {
                                        "description": "ID du document de vérification à valider",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Document de vérification validé avec succès"
                    },
                    "400": {
                        "description": "Erreur de validation des données"
                    },
                    "404": {
                        "description": "Document de vérification non trouvé"
                    },
                    "500": {
                        "description": "Erreur interne du serveur"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/result/demande": {
            "get": {
                "tags": [
                    "verification_document"
                ],
                "summary": "Affiche pour un utiliateur connecté,le statut de ses documents soumis et le statut de sa demande",
                "operationId": "093281058feacc15f5160fd22c7e7e4e",
                "responses": {
                    "200": {
                        "description": "Demandes de vérification récupérées avec succès pour l'utilisateur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "verification_documents": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "document_id": {
                                                        "type": "integer"
                                                    },
                                                    "document_name": {
                                                        "type": "string"
                                                    },
                                                    "path": {
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "request_status": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Erreur lors de la récupération des documents de vérification"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/verificationdocument/update": {
            "post": {
                "tags": [
                    "verification_document"
                ],
                "summary": "Changer un document de vérification",
                "operationId": "1a305c842f1cb92f87adb26f283ea16e",
                "requestBody": {
                    "description": "Données pour changer le document de vérification",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "verification_document_id",
                                    "new_document"
                                ],
                                "properties": {
                                    "verification_document_id": {
                                        "description": "ID du document de vérification à changer",
                                        "type": "integer"
                                    },
                                    "new_document": {
                                        "description": "Nouveau document à téléverser",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Document changé avec succès"
                    },
                    "400": {
                        "description": "Impossible de changer le document"
                    },
                    "500": {
                        "description": "Erreur lors du changement de document"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "responses": {
            "500": {
                "description": "Server error"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}